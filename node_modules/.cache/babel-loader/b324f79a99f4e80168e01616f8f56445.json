{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = messageParent;\n\nvar _types = require('../types');\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n\nconst isWorkerThread = (() => {\n  try {\n    // `Require` here to support Node v10\n    const {\n      isMainThread,\n      parentPort\n    } = require('worker_threads');\n\n    return !isMainThread && parentPort != null;\n  } catch {\n    return false;\n  }\n})();\n\nfunction messageParent(message, parentProcess = process) {\n  if (isWorkerThread) {\n    // `Require` here to support Node v10\n    const {\n      parentPort\n    } = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\n\n\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else if (typeof parentProcess.send === 'function') {\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","messageParent","_types","require","isWorkerThread","isMainThread","parentPort","message","parentProcess","process","postMessage","PARENT_MESSAGE_CUSTOM","send","Error"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/jest-worker/build/workers/messageParent.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.default = messageParent;\r\n\r\nvar _types = require('../types');\r\n\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nconst isWorkerThread = (() => {\r\n  try {\r\n    // `Require` here to support Node v10\r\n    const {isMainThread, parentPort} = require('worker_threads');\r\n\r\n    return !isMainThread && parentPort != null;\r\n  } catch {\r\n    return false;\r\n  }\r\n})();\r\n\r\nfunction messageParent(message, parentProcess = process) {\r\n  if (isWorkerThread) {\r\n    // `Require` here to support Node v10\r\n    const {parentPort} = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\r\n\r\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\r\n  } else if (typeof parentProcess.send === 'function') {\r\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\r\n  } else {\r\n    throw new Error('\"messageParent\" can only be used inside a worker');\r\n  }\r\n}\r\n"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,CAAC,MAAM;EAC5B,IAAI;IACF;IACA,MAAM;MAACC,YAAD;MAAeC;IAAf,IAA6BH,OAAO,CAAC,gBAAD,CAA1C;;IAEA,OAAO,CAACE,YAAD,IAAiBC,UAAU,IAAI,IAAtC;EACD,CALD,CAKE,MAAM;IACN,OAAO,KAAP;EACD;AACF,CATsB,GAAvB;;AAWA,SAASL,aAAT,CAAuBM,OAAvB,EAAgCC,aAAa,GAAGC,OAAhD,EAAyD;EACvD,IAAIL,cAAJ,EAAoB;IAClB;IACA,MAAM;MAACE;IAAD,IAAeH,OAAO,CAAC,gBAAD,CAA5B,CAFkB,CAE8B;;;IAEhDG,UAAU,CAACI,WAAX,CAAuB,CAACR,MAAM,CAACS,qBAAR,EAA+BJ,OAA/B,CAAvB;EACD,CALD,MAKO,IAAI,OAAOC,aAAa,CAACI,IAArB,KAA8B,UAAlC,EAA8C;IACnDJ,aAAa,CAACI,IAAd,CAAmB,CAACV,MAAM,CAACS,qBAAR,EAA+BJ,OAA/B,CAAnB;EACD,CAFM,MAEA;IACL,MAAM,IAAIM,KAAJ,CAAU,kDAAV,CAAN;EACD;AACF"},"metadata":{},"sourceType":"script"}