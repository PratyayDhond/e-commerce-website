{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_switch(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n      $currentBaseId = $it.baseId,\n      $shouldContinue;\n  out += 'var ' + $ifPassed + ';';\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $sch,\n        $caseIndex = -1,\n        l1 = arr1.length - 1;\n\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + $ifPassed + ') { ';\n        $closingBraces += '}';\n      }\n\n      if ($sch.if && (it.opts.strictKeywords ? typeof $sch.if == 'object' && Object.keys($sch.if).length > 0 : it.util.schemaHasRules($sch.if, it.RULES.all))) {\n        out += ' var ' + $errs + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + it.validate($it) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + $ifPassed + ' = ' + $nextValid + '; if (' + $ifPassed + ') {  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + 'switch' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n\n        out += '  } else {  errors = ' + $errs + '; if (vErrors !== null) { if (' + $errs + ') vErrors.length = ' + $errs + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + $ifPassed + ' = true;  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + 'switch' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n\n      $shouldContinue = $sch.continue;\n    }\n  }\n\n  out += '' + $closingBraces + 'var ' + $valid + ' = ' + $nextValid + ';';\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_switch","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$ifPassed","$currentBaseId","baseId","$shouldContinue","arr1","$sch","$caseIndex","l1","length","if","strictKeywords","Object","keys","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","validate","then","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async","continue"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/ajv-keywords/keywords/dotjs/switch.js"],"sourcesContent":["'use strict';\r\nmodule.exports = function generate_switch(it, $keyword, $ruleType) {\r\n  var out = ' ';\r\n  var $lvl = it.level;\r\n  var $dataLvl = it.dataLevel;\r\n  var $schema = it.schema[$keyword];\r\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\r\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\r\n  var $breakOnError = !it.opts.allErrors;\r\n  var $data = 'data' + ($dataLvl || '');\r\n  var $valid = 'valid' + $lvl;\r\n  var $errs = 'errs__' + $lvl;\r\n  var $it = it.util.copy(it);\r\n  var $closingBraces = '';\r\n  $it.level++;\r\n  var $nextValid = 'valid' + $it.level;\r\n  var $ifPassed = 'ifPassed' + it.level,\r\n    $currentBaseId = $it.baseId,\r\n    $shouldContinue;\r\n  out += 'var ' + ($ifPassed) + ';';\r\n  var arr1 = $schema;\r\n  if (arr1) {\r\n    var $sch, $caseIndex = -1,\r\n      l1 = arr1.length - 1;\r\n    while ($caseIndex < l1) {\r\n      $sch = arr1[$caseIndex += 1];\r\n      if ($caseIndex && !$shouldContinue) {\r\n        out += ' if (!' + ($ifPassed) + ') { ';\r\n        $closingBraces += '}';\r\n      }\r\n      if ($sch.if && (it.opts.strictKeywords ? typeof $sch.if == 'object' && Object.keys($sch.if).length > 0 : it.util.schemaHasRules($sch.if, it.RULES.all))) {\r\n        out += ' var ' + ($errs) + ' = errors;   ';\r\n        var $wasComposite = it.compositeRule;\r\n        it.compositeRule = $it.compositeRule = true;\r\n        $it.createErrors = false;\r\n        $it.schema = $sch.if;\r\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\r\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\r\n        out += '  ' + (it.validate($it)) + ' ';\r\n        $it.baseId = $currentBaseId;\r\n        $it.createErrors = true;\r\n        it.compositeRule = $it.compositeRule = $wasComposite;\r\n        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';\r\n        if (typeof $sch.then == 'boolean') {\r\n          if ($sch.then === false) {\r\n            var $$outStack = $$outStack || [];\r\n            $$outStack.push(out);\r\n            out = ''; /* istanbul ignore else */\r\n            if (it.createErrors !== false) {\r\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\r\n              if (it.opts.messages !== false) {\r\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\r\n              }\r\n              if (it.opts.verbose) {\r\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\r\n              }\r\n              out += ' } ';\r\n            } else {\r\n              out += ' {} ';\r\n            }\r\n            var __err = out;\r\n            out = $$outStack.pop();\r\n            if (!it.compositeRule && $breakOnError) {\r\n              /* istanbul ignore if */\r\n              if (it.async) {\r\n                out += ' throw new ValidationError([' + (__err) + ']); ';\r\n              } else {\r\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\r\n              }\r\n            } else {\r\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\r\n            }\r\n          }\r\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\r\n        } else {\r\n          $it.schema = $sch.then;\r\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\r\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\r\n          out += '  ' + (it.validate($it)) + ' ';\r\n          $it.baseId = $currentBaseId;\r\n        }\r\n        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';\r\n      } else {\r\n        out += ' ' + ($ifPassed) + ' = true;  ';\r\n        if (typeof $sch.then == 'boolean') {\r\n          if ($sch.then === false) {\r\n            var $$outStack = $$outStack || [];\r\n            $$outStack.push(out);\r\n            out = ''; /* istanbul ignore else */\r\n            if (it.createErrors !== false) {\r\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\r\n              if (it.opts.messages !== false) {\r\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\r\n              }\r\n              if (it.opts.verbose) {\r\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\r\n              }\r\n              out += ' } ';\r\n            } else {\r\n              out += ' {} ';\r\n            }\r\n            var __err = out;\r\n            out = $$outStack.pop();\r\n            if (!it.compositeRule && $breakOnError) {\r\n              /* istanbul ignore if */\r\n              if (it.async) {\r\n                out += ' throw new ValidationError([' + (__err) + ']); ';\r\n              } else {\r\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\r\n              }\r\n            } else {\r\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\r\n            }\r\n          }\r\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\r\n        } else {\r\n          $it.schema = $sch.then;\r\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\r\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\r\n          out += '  ' + (it.validate($it)) + ' ';\r\n          $it.baseId = $currentBaseId;\r\n        }\r\n      }\r\n      $shouldContinue = $sch.continue\r\n    }\r\n  }\r\n  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + ';';\r\n  return out;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}