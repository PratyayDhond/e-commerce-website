{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\nmodule.exports = class JoinRequestPartPlugin {\n  /**\r\n   * @param {string | ResolveStepHook} source source\r\n   * @param {string | ResolveStepHook} target target\r\n   */\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n  /**\r\n   * @param {Resolver} resolver the resolver\r\n   * @returns {void}\r\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"JoinRequestPartPlugin\", (request, resolveContext, callback) => {\n      const req = request.request || \"\";\n      let i = req.indexOf(\"/\", 3);\n\n      if (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n        i = req.indexOf(\"/\", i + 1);\n      }\n\n      let moduleName, remainingRequest, fullySpecified;\n\n      if (i < 0) {\n        moduleName = req;\n        remainingRequest = \".\";\n        fullySpecified = false;\n      } else {\n        moduleName = req.slice(0, i);\n        remainingRequest = \".\" + req.slice(i);\n        fullySpecified = request.fullySpecified;\n      }\n\n      const obj = { ...request,\n        path: resolver.join(request.path, moduleName),\n        relativePath: request.relativePath && resolver.join(request.relativePath, moduleName),\n        request: remainingRequest,\n        fullySpecified\n      };\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"names":["namespaceStartCharCode","charCodeAt","module","exports","JoinRequestPartPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","i","indexOf","moduleName","remainingRequest","fullySpecified","slice","obj","path","join","relativePath","doResolve"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/enhanced-resolve/lib/JoinRequestPartPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"./Resolver\")} Resolver */\r\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\r\n\r\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\r\n\r\nmodule.exports = class JoinRequestPartPlugin {\r\n\t/**\r\n\t * @param {string | ResolveStepHook} source source\r\n\t * @param {string | ResolveStepHook} target target\r\n\t */\r\n\tconstructor(source, target) {\r\n\t\tthis.source = source;\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Resolver} resolver the resolver\r\n\t * @returns {void}\r\n\t */\r\n\tapply(resolver) {\r\n\t\tconst target = resolver.ensureHook(this.target);\r\n\t\tresolver\r\n\t\t\t.getHook(this.source)\r\n\t\t\t.tapAsync(\r\n\t\t\t\t\"JoinRequestPartPlugin\",\r\n\t\t\t\t(request, resolveContext, callback) => {\r\n\t\t\t\t\tconst req = request.request || \"\";\r\n\t\t\t\t\tlet i = req.indexOf(\"/\", 3);\r\n\r\n\t\t\t\t\tif (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\r\n\t\t\t\t\t\ti = req.indexOf(\"/\", i + 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet moduleName, remainingRequest, fullySpecified;\r\n\t\t\t\t\tif (i < 0) {\r\n\t\t\t\t\t\tmoduleName = req;\r\n\t\t\t\t\t\tremainingRequest = \".\";\r\n\t\t\t\t\t\tfullySpecified = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmoduleName = req.slice(0, i);\r\n\t\t\t\t\t\tremainingRequest = \".\" + req.slice(i);\r\n\t\t\t\t\t\tfullySpecified = request.fullySpecified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = {\r\n\t\t\t\t\t\t...request,\r\n\t\t\t\t\t\tpath: resolver.join(request.path, moduleName),\r\n\t\t\t\t\t\trelativePath:\r\n\t\t\t\t\t\t\trequest.relativePath &&\r\n\t\t\t\t\t\t\tresolver.join(request.relativePath, moduleName),\r\n\t\t\t\t\t\trequest: remainingRequest,\r\n\t\t\t\t\t\tfullySpecified\r\n\t\t\t\t\t};\r\n\t\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,sBAAsB,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAA/B;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,qBAAN,CAA4B;EAC5C;AACD;AACA;AACA;EACCC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAGE,uBAHF,EAIE,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACtC,MAAMC,GAAG,GAAGH,OAAO,CAACA,OAAR,IAAmB,EAA/B;MACA,IAAII,CAAC,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiB,CAAjB,CAAR;;MAEA,IAAID,CAAC,IAAI,CAAL,IAAUD,GAAG,CAACf,UAAJ,CAAe,CAAf,MAAsBD,sBAApC,EAA4D;QAC3DiB,CAAC,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiBD,CAAC,GAAG,CAArB,CAAJ;MACA;;MAED,IAAIE,UAAJ,EAAgBC,gBAAhB,EAAkCC,cAAlC;;MACA,IAAIJ,CAAC,GAAG,CAAR,EAAW;QACVE,UAAU,GAAGH,GAAb;QACAI,gBAAgB,GAAG,GAAnB;QACAC,cAAc,GAAG,KAAjB;MACA,CAJD,MAIO;QACNF,UAAU,GAAGH,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAaL,CAAb,CAAb;QACAG,gBAAgB,GAAG,MAAMJ,GAAG,CAACM,KAAJ,CAAUL,CAAV,CAAzB;QACAI,cAAc,GAAGR,OAAO,CAACQ,cAAzB;MACA;;MACD,MAAME,GAAG,GAAG,EACX,GAAGV,OADQ;QAEXW,IAAI,EAAEf,QAAQ,CAACgB,IAAT,CAAcZ,OAAO,CAACW,IAAtB,EAA4BL,UAA5B,CAFK;QAGXO,YAAY,EACXb,OAAO,CAACa,YAAR,IACAjB,QAAQ,CAACgB,IAAT,CAAcZ,OAAO,CAACa,YAAtB,EAAoCP,UAApC,CALU;QAMXN,OAAO,EAAEO,gBANE;QAOXC;MAPW,CAAZ;MASAZ,QAAQ,CAACkB,SAAT,CAAmBpB,MAAnB,EAA2BgB,GAA3B,EAAgC,IAAhC,EAAsCT,cAAtC,EAAsDC,QAAtD;IACA,CAhCH;EAkCA;;AAlD2C,CAA7C"},"metadata":{},"sourceType":"script"}