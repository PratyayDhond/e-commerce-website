{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","map":{"version":3,"names":["exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/base64-js/index.js"],"sourcesContent":["'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}