{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nconst versions = require(\"process\").versions;\n\nconst Resolver = require(\"./Resolver\");\n\nconst {\n  getType,\n  PathType\n} = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\n\nconst AliasPlugin = require(\"./AliasPlugin\");\n\nconst AppendPlugin = require(\"./AppendPlugin\");\n\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\n\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\n\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\n\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\n\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\n\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\n\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\n\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\n\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\n\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\n\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\n\nconst NextPlugin = require(\"./NextPlugin\");\n\nconst ParsePlugin = require(\"./ParsePlugin\");\n\nconst PnpPlugin = require(\"./PnpPlugin\");\n\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\n\nconst ResultPlugin = require(\"./ResultPlugin\");\n\nconst RootsPlugin = require(\"./RootsPlugin\");\n\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\n\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\n\nconst TryNextPlugin = require(\"./TryNextPlugin\");\n\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\n\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\r\n * @typedef {Object} UserResolveOptions\r\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\r\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\r\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\r\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\r\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\r\n * @property {string[]=} descriptionFiles A list of description files to read from\r\n * @property {string[]=} conditionNames A list of exports field condition names.\r\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\r\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\r\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\r\n * @property {string[]=} extensions A list of extensions which should be tried for files\r\n * @property {FileSystem} fileSystem The file system which should be used\r\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\r\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\r\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\r\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\r\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\r\n * @property {string[]=} mainFiles  A list of main files in directories\r\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\r\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\r\n * @property {string[]=} roots A list of root paths\r\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\r\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\r\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\r\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\r\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\r\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\r\n */\n\n/**\r\n * @typedef {Object} ResolveOptions\r\n * @property {AliasOptionEntry[]} alias\r\n * @property {AliasOptionEntry[]} fallback\r\n * @property {Set<string | string[]>} aliasFields\r\n * @property {(function(ResolveRequest): boolean)} cachePredicate\r\n * @property {boolean} cacheWithContext\r\n * @property {Set<string>} conditionNames A list of exports field condition names.\r\n * @property {string[]} descriptionFiles\r\n * @property {boolean} enforceExtension\r\n * @property {Set<string | string[]>} exportsFields\r\n * @property {Set<string | string[]>} importsFields\r\n * @property {Set<string>} extensions\r\n * @property {FileSystem} fileSystem\r\n * @property {object | false} unsafeCache\r\n * @property {boolean} symlinks\r\n * @property {Resolver=} resolver\r\n * @property {Array<string | string[]>} modules\r\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\r\n * @property {Set<string>} mainFiles\r\n * @property {Plugin[]} plugins\r\n * @property {PnpApi | null} pnpApi\r\n * @property {Set<string>} roots\r\n * @property {boolean} fullySpecified\r\n * @property {boolean} resolveToContext\r\n * @property {Set<string|RegExp>} restrictions\r\n * @property {boolean} preferRelative\r\n * @property {boolean} preferAbsolute\r\n */\n\n/**\r\n * @param {PnpApi | null=} option option\r\n * @returns {PnpApi | null} processed option\r\n */\n\n\nfunction processPnpApiOption(option) {\n  if (option === undefined &&\n  /** @type {NodeJS.ProcessVersions & {pnp: string}} */\n  versions.pnp) {\n    // @ts-ignore\n    return require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n  }\n\n  return option || null;\n}\n/**\r\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\r\n * @returns {AliasOptionEntry[]} normalized aliases\r\n */\n\n\nfunction normalizeAlias(alias) {\n  return typeof alias === \"object\" && !Array.isArray(alias) && alias !== null ? Object.keys(alias).map(key => {\n    /** @type {AliasOptionEntry} */\n    const obj = {\n      name: key,\n      onlyModule: false,\n      alias: alias[key]\n    };\n\n    if (/\\$$/.test(key)) {\n      obj.onlyModule = true;\n      obj.name = key.substr(0, key.length - 1);\n    }\n\n    return obj;\n  }) :\n  /** @type {Array<AliasOptionEntry>} */\n  alias || [];\n}\n/**\r\n * @param {UserResolveOptions} options input options\r\n * @returns {ResolveOptions} output options\r\n */\n\n\nfunction createOptions(options) {\n  const mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n  const mainFields = [];\n\n  for (const item of mainFieldsSet) {\n    if (typeof item === \"string\") {\n      mainFields.push({\n        name: [item],\n        forceRelative: true\n      });\n    } else if (Array.isArray(item)) {\n      mainFields.push({\n        name: item,\n        forceRelative: true\n      });\n    } else {\n      mainFields.push({\n        name: Array.isArray(item.name) ? item.name : [item.name],\n        forceRelative: item.forceRelative\n      });\n    }\n  }\n\n  return {\n    alias: normalizeAlias(options.alias),\n    fallback: normalizeAlias(options.fallback),\n    aliasFields: new Set(options.aliasFields),\n    cachePredicate: options.cachePredicate || function () {\n      return true;\n    },\n    cacheWithContext: typeof options.cacheWithContext !== \"undefined\" ? options.cacheWithContext : true,\n    exportsFields: new Set(options.exportsFields || [\"exports\"]),\n    importsFields: new Set(options.importsFields || [\"imports\"]),\n    conditionNames: new Set(options.conditionNames),\n    descriptionFiles: Array.from(new Set(options.descriptionFiles || [\"package.json\"])),\n    enforceExtension: options.enforceExtension === undefined ? options.extensions && options.extensions.includes(\"\") ? true : false : options.enforceExtension,\n    extensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n    fileSystem: options.useSyncFileSystemCalls ? new SyncAsyncFileSystemDecorator(\n    /** @type {SyncFileSystem} */\n\n    /** @type {unknown} */\n    options.fileSystem) : options.fileSystem,\n    unsafeCache: options.unsafeCache && typeof options.unsafeCache !== \"object\" ? {} : options.unsafeCache || false,\n    symlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n    resolver: options.resolver,\n    modules: mergeFilteredToArray(Array.isArray(options.modules) ? options.modules : options.modules ? [options.modules] : [\"node_modules\"], item => {\n      const type = getType(item);\n      return type === PathType.Normal || type === PathType.Relative;\n    }),\n    mainFields,\n    mainFiles: new Set(options.mainFiles || [\"index\"]),\n    plugins: options.plugins || [],\n    pnpApi: processPnpApiOption(options.pnpApi),\n    roots: new Set(options.roots || undefined),\n    fullySpecified: options.fullySpecified || false,\n    resolveToContext: options.resolveToContext || false,\n    preferRelative: options.preferRelative || false,\n    preferAbsolute: options.preferAbsolute || false,\n    restrictions: new Set(options.restrictions)\n  };\n}\n/**\r\n * @param {UserResolveOptions} options resolve options\r\n * @returns {Resolver} created resolver\r\n */\n\n\nexports.createResolver = function (options) {\n  const normalizedOptions = createOptions(options);\n  const {\n    alias,\n    fallback,\n    aliasFields,\n    cachePredicate,\n    cacheWithContext,\n    conditionNames,\n    descriptionFiles,\n    enforceExtension,\n    exportsFields,\n    importsFields,\n    extensions,\n    fileSystem,\n    fullySpecified,\n    mainFields,\n    mainFiles,\n    modules,\n    plugins: userPlugins,\n    pnpApi,\n    resolveToContext,\n    preferRelative,\n    preferAbsolute,\n    symlinks,\n    unsafeCache,\n    resolver: customResolver,\n    restrictions,\n    roots\n  } = normalizedOptions;\n  const plugins = userPlugins.slice();\n  const resolver = customResolver ? customResolver : new Resolver(fileSystem, normalizedOptions); //// pipeline ////\n\n  resolver.ensureHook(\"resolve\");\n  resolver.ensureHook(\"internalResolve\");\n  resolver.ensureHook(\"newInternalResolve\");\n  resolver.ensureHook(\"parsedResolve\");\n  resolver.ensureHook(\"describedResolve\");\n  resolver.ensureHook(\"internal\");\n  resolver.ensureHook(\"rawModule\");\n  resolver.ensureHook(\"module\");\n  resolver.ensureHook(\"resolveAsModule\");\n  resolver.ensureHook(\"undescribedResolveInPackage\");\n  resolver.ensureHook(\"resolveInPackage\");\n  resolver.ensureHook(\"resolveInExistingDirectory\");\n  resolver.ensureHook(\"relative\");\n  resolver.ensureHook(\"describedRelative\");\n  resolver.ensureHook(\"directory\");\n  resolver.ensureHook(\"undescribedExistingDirectory\");\n  resolver.ensureHook(\"existingDirectory\");\n  resolver.ensureHook(\"undescribedRawFile\");\n  resolver.ensureHook(\"rawFile\");\n  resolver.ensureHook(\"file\");\n  resolver.ensureHook(\"finalFile\");\n  resolver.ensureHook(\"existingFile\");\n  resolver.ensureHook(\"resolved\"); // TODO remove in next major\n  // cspell:word Interal\n  // Backward-compat\n\n  resolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve; // resolve\n\n  for (const {\n    source,\n    resolveOptions\n  } of [{\n    source: \"resolve\",\n    resolveOptions: {\n      fullySpecified\n    }\n  }, {\n    source: \"internal-resolve\",\n    resolveOptions: {\n      fullySpecified: false\n    }\n  }]) {\n    if (unsafeCache) {\n      plugins.push(new UnsafeCachePlugin(source, cachePredicate, unsafeCache, cacheWithContext, `new-${source}`));\n      plugins.push(new ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\"));\n    } else {\n      plugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n    }\n  } // parsed-resolve\n\n\n  plugins.push(new DescriptionFilePlugin(\"parsed-resolve\", descriptionFiles, false, \"described-resolve\"));\n  plugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\")); // described-resolve\n\n  plugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\n\n  if (fallback.length > 0) {\n    plugins.push(new AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\"));\n  } // normal-resolve\n\n\n  if (alias.length > 0) plugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\n  aliasFields.forEach(item => {\n    plugins.push(new AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\"));\n  });\n\n  if (preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    module: true\n  }, \"resolve as module\", false, \"raw-module\"));\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    internal: true\n  }, \"resolve as internal import\", false, \"internal\"));\n\n  if (preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  if (roots.size > 0) {\n    plugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n  }\n\n  if (!preferRelative && !preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  } // internal\n\n\n  importsFields.forEach(importsField => {\n    plugins.push(new ImportsFieldPlugin(\"internal\", conditionNames, importsField, \"relative\", \"internal-resolve\"));\n  }); // raw-module\n\n  exportsFields.forEach(exportsField => {\n    plugins.push(new SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\"));\n  });\n  modules.forEach(item => {\n    if (Array.isArray(item)) {\n      if (item.includes(\"node_modules\") && pnpApi) {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item.filter(i => i !== \"node_modules\"), \"module\"));\n        plugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\"));\n      } else {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item, \"module\"));\n      }\n    } else {\n      plugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n    }\n  }); // module\n\n  plugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\")); // resolve-as-module\n\n  if (!resolveToContext) {\n    plugins.push(new ConditionalPlugin(\"resolve-as-module\", {\n      directory: false,\n      request: \".\"\n    }, \"single file module\", true, \"undescribed-raw-file\"));\n  }\n\n  plugins.push(new DirectoryExistsPlugin(\"resolve-as-module\", \"undescribed-resolve-in-package\")); // undescribed-resolve-in-package\n\n  plugins.push(new DescriptionFilePlugin(\"undescribed-resolve-in-package\", descriptionFiles, false, \"resolve-in-package\"));\n  plugins.push(new NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")); // resolve-in-package\n\n  exportsFields.forEach(exportsField => {\n    plugins.push(new ExportsFieldPlugin(\"resolve-in-package\", conditionNames, exportsField, \"relative\"));\n  });\n  plugins.push(new NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")); // resolve-in-existing-directory\n\n  plugins.push(new JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")); // relative\n\n  plugins.push(new DescriptionFilePlugin(\"relative\", descriptionFiles, true, \"described-relative\"));\n  plugins.push(new NextPlugin(\"after-relative\", \"described-relative\")); // described-relative\n\n  if (resolveToContext) {\n    plugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n  } else {\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      directory: false\n    }, null, true, \"raw-file\"));\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      fullySpecified: false\n    }, \"as directory\", true, \"directory\"));\n  } // directory\n\n\n  plugins.push(new DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\"));\n\n  if (resolveToContext) {\n    // undescribed-existing-directory\n    plugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n  } else {\n    // undescribed-existing-directory\n    plugins.push(new DescriptionFilePlugin(\"undescribed-existing-directory\", descriptionFiles, false, \"existing-directory\"));\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"undescribed-existing-directory\", item, \"undescribed-raw-file\"));\n    }); // described-existing-directory\n\n    mainFields.forEach(item => {\n      plugins.push(new MainFieldPlugin(\"existing-directory\", item, \"resolve-in-existing-directory\"));\n    });\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\"));\n    }); // undescribed-raw-file\n\n    plugins.push(new DescriptionFilePlugin(\"undescribed-raw-file\", descriptionFiles, true, \"raw-file\"));\n    plugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\")); // raw-file\n\n    plugins.push(new ConditionalPlugin(\"raw-file\", {\n      fullySpecified: true\n    }, null, false, \"file\"));\n\n    if (!enforceExtension) {\n      plugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n    }\n\n    extensions.forEach(item => {\n      plugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n    }); // file\n\n    if (alias.length > 0) plugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n    aliasFields.forEach(item => {\n      plugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n    });\n    plugins.push(new NextPlugin(\"file\", \"final-file\")); // final-file\n\n    plugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\")); // existing-file\n\n    if (symlinks) plugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n    plugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n  } // resolved\n\n\n  if (restrictions.size > 0) {\n    plugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n  }\n\n  plugins.push(new ResultPlugin(resolver.hooks.resolved)); //// RESOLVER ////\n\n  for (const plugin of plugins) {\n    if (typeof plugin === \"function\") {\n      plugin.call(resolver, resolver);\n    } else {\n      plugin.apply(resolver);\n    }\n  }\n\n  return resolver;\n};\n/**\r\n * Merging filtered elements\r\n * @param {string[]} array source array\r\n * @param {function(string): boolean} filter predicate\r\n * @returns {Array<string | string[]>} merge result\r\n */\n\n\nfunction mergeFilteredToArray(array, filter) {\n  /** @type {Array<string | string[]>} */\n  const result = [];\n  const set = new Set(array);\n\n  for (const item of set) {\n    if (filter(item)) {\n      const lastElement = result.length > 0 ? result[result.length - 1] : undefined;\n\n      if (Array.isArray(lastElement)) {\n        lastElement.push(item);\n      } else {\n        result.push([item]);\n      }\n    } else {\n      result.push(item);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"names":["versions","require","Resolver","getType","PathType","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierarchicalDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","processPnpApiOption","option","undefined","pnp","normalizeAlias","alias","Array","isArray","Object","keys","map","key","obj","name","onlyModule","test","substr","length","createOptions","options","mainFieldsSet","Set","mainFields","item","push","forceRelative","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","conditionNames","descriptionFiles","from","enforceExtension","extensions","includes","fileSystem","useSyncFileSystemCalls","unsafeCache","symlinks","resolver","modules","mergeFilteredToArray","type","Normal","Relative","mainFiles","plugins","pnpApi","roots","fullySpecified","resolveToContext","preferRelative","preferAbsolute","restrictions","exports","createResolver","normalizedOptions","userPlugins","customResolver","slice","ensureHook","hooks","newInteralResolve","newInternalResolve","source","resolveOptions","forEach","module","internal","size","importsField","exportsField","filter","i","directory","request","resolved","plugin","call","apply","array","result","set","lastElement"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/enhanced-resolve/lib/ResolverFactory.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst versions = require(\"process\").versions;\r\nconst Resolver = require(\"./Resolver\");\r\nconst { getType, PathType } = require(\"./util/path\");\r\n\r\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\r\n\r\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\r\nconst AliasPlugin = require(\"./AliasPlugin\");\r\nconst AppendPlugin = require(\"./AppendPlugin\");\r\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\r\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\r\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\r\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\r\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\r\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\r\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\r\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\r\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\r\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\r\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\r\nconst NextPlugin = require(\"./NextPlugin\");\r\nconst ParsePlugin = require(\"./ParsePlugin\");\r\nconst PnpPlugin = require(\"./PnpPlugin\");\r\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\r\nconst ResultPlugin = require(\"./ResultPlugin\");\r\nconst RootsPlugin = require(\"./RootsPlugin\");\r\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\r\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\r\nconst TryNextPlugin = require(\"./TryNextPlugin\");\r\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\r\nconst UseFilePlugin = require(\"./UseFilePlugin\");\r\n\r\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\r\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\r\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\r\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\r\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\r\n\r\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\r\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\r\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\r\n\r\n/**\r\n * @typedef {Object} UserResolveOptions\r\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\r\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\r\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\r\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\r\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\r\n * @property {string[]=} descriptionFiles A list of description files to read from\r\n * @property {string[]=} conditionNames A list of exports field condition names.\r\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\r\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\r\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\r\n * @property {string[]=} extensions A list of extensions which should be tried for files\r\n * @property {FileSystem} fileSystem The file system which should be used\r\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\r\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\r\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\r\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\r\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\r\n * @property {string[]=} mainFiles  A list of main files in directories\r\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\r\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\r\n * @property {string[]=} roots A list of root paths\r\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\r\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\r\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\r\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\r\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\r\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\r\n */\r\n\r\n/**\r\n * @typedef {Object} ResolveOptions\r\n * @property {AliasOptionEntry[]} alias\r\n * @property {AliasOptionEntry[]} fallback\r\n * @property {Set<string | string[]>} aliasFields\r\n * @property {(function(ResolveRequest): boolean)} cachePredicate\r\n * @property {boolean} cacheWithContext\r\n * @property {Set<string>} conditionNames A list of exports field condition names.\r\n * @property {string[]} descriptionFiles\r\n * @property {boolean} enforceExtension\r\n * @property {Set<string | string[]>} exportsFields\r\n * @property {Set<string | string[]>} importsFields\r\n * @property {Set<string>} extensions\r\n * @property {FileSystem} fileSystem\r\n * @property {object | false} unsafeCache\r\n * @property {boolean} symlinks\r\n * @property {Resolver=} resolver\r\n * @property {Array<string | string[]>} modules\r\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\r\n * @property {Set<string>} mainFiles\r\n * @property {Plugin[]} plugins\r\n * @property {PnpApi | null} pnpApi\r\n * @property {Set<string>} roots\r\n * @property {boolean} fullySpecified\r\n * @property {boolean} resolveToContext\r\n * @property {Set<string|RegExp>} restrictions\r\n * @property {boolean} preferRelative\r\n * @property {boolean} preferAbsolute\r\n */\r\n\r\n/**\r\n * @param {PnpApi | null=} option option\r\n * @returns {PnpApi | null} processed option\r\n */\r\nfunction processPnpApiOption(option) {\r\n\tif (\r\n\t\toption === undefined &&\r\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ versions.pnp\r\n\t) {\r\n\t\t// @ts-ignore\r\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\r\n\t}\r\n\r\n\treturn option || null;\r\n}\r\n\r\n/**\r\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\r\n * @returns {AliasOptionEntry[]} normalized aliases\r\n */\r\nfunction normalizeAlias(alias) {\r\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\r\n\t\t? Object.keys(alias).map(key => {\r\n\t\t\t\t/** @type {AliasOptionEntry} */\r\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\r\n\r\n\t\t\t\tif (/\\$$/.test(key)) {\r\n\t\t\t\t\tobj.onlyModule = true;\r\n\t\t\t\t\tobj.name = key.substr(0, key.length - 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn obj;\r\n\t\t  })\r\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\r\n}\r\n\r\n/**\r\n * @param {UserResolveOptions} options input options\r\n * @returns {ResolveOptions} output options\r\n */\r\nfunction createOptions(options) {\r\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\r\n\tconst mainFields = [];\r\n\r\n\tfor (const item of mainFieldsSet) {\r\n\t\tif (typeof item === \"string\") {\r\n\t\t\tmainFields.push({\r\n\t\t\t\tname: [item],\r\n\t\t\t\tforceRelative: true\r\n\t\t\t});\r\n\t\t} else if (Array.isArray(item)) {\r\n\t\t\tmainFields.push({\r\n\t\t\t\tname: item,\r\n\t\t\t\tforceRelative: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tmainFields.push({\r\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\r\n\t\t\t\tforceRelative: item.forceRelative\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\talias: normalizeAlias(options.alias),\r\n\t\tfallback: normalizeAlias(options.fallback),\r\n\t\taliasFields: new Set(options.aliasFields),\r\n\t\tcachePredicate:\r\n\t\t\toptions.cachePredicate ||\r\n\t\t\tfunction () {\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\tcacheWithContext:\r\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\r\n\t\t\t\t? options.cacheWithContext\r\n\t\t\t\t: true,\r\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\r\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\r\n\t\tconditionNames: new Set(options.conditionNames),\r\n\t\tdescriptionFiles: Array.from(\r\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\r\n\t\t),\r\n\t\tenforceExtension:\r\n\t\t\toptions.enforceExtension === undefined\r\n\t\t\t\t? options.extensions && options.extensions.includes(\"\")\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: false\r\n\t\t\t\t: options.enforceExtension,\r\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\r\n\t\tfileSystem: options.useSyncFileSystemCalls\r\n\t\t\t? new SyncAsyncFileSystemDecorator(\r\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\r\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\r\n\t\t\t\t\t)\r\n\t\t\t  )\r\n\t\t\t: options.fileSystem,\r\n\t\tunsafeCache:\r\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\r\n\t\t\t\t? {}\r\n\t\t\t\t: options.unsafeCache || false,\r\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\r\n\t\tresolver: options.resolver,\r\n\t\tmodules: mergeFilteredToArray(\r\n\t\t\tArray.isArray(options.modules)\r\n\t\t\t\t? options.modules\r\n\t\t\t\t: options.modules\r\n\t\t\t\t? [options.modules]\r\n\t\t\t\t: [\"node_modules\"],\r\n\t\t\titem => {\r\n\t\t\t\tconst type = getType(item);\r\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\r\n\t\t\t}\r\n\t\t),\r\n\t\tmainFields,\r\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\r\n\t\tplugins: options.plugins || [],\r\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\r\n\t\troots: new Set(options.roots || undefined),\r\n\t\tfullySpecified: options.fullySpecified || false,\r\n\t\tresolveToContext: options.resolveToContext || false,\r\n\t\tpreferRelative: options.preferRelative || false,\r\n\t\tpreferAbsolute: options.preferAbsolute || false,\r\n\t\trestrictions: new Set(options.restrictions)\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {UserResolveOptions} options resolve options\r\n * @returns {Resolver} created resolver\r\n */\r\nexports.createResolver = function (options) {\r\n\tconst normalizedOptions = createOptions(options);\r\n\r\n\tconst {\r\n\t\talias,\r\n\t\tfallback,\r\n\t\taliasFields,\r\n\t\tcachePredicate,\r\n\t\tcacheWithContext,\r\n\t\tconditionNames,\r\n\t\tdescriptionFiles,\r\n\t\tenforceExtension,\r\n\t\texportsFields,\r\n\t\timportsFields,\r\n\t\textensions,\r\n\t\tfileSystem,\r\n\t\tfullySpecified,\r\n\t\tmainFields,\r\n\t\tmainFiles,\r\n\t\tmodules,\r\n\t\tplugins: userPlugins,\r\n\t\tpnpApi,\r\n\t\tresolveToContext,\r\n\t\tpreferRelative,\r\n\t\tpreferAbsolute,\r\n\t\tsymlinks,\r\n\t\tunsafeCache,\r\n\t\tresolver: customResolver,\r\n\t\trestrictions,\r\n\t\troots\r\n\t} = normalizedOptions;\r\n\r\n\tconst plugins = userPlugins.slice();\r\n\r\n\tconst resolver = customResolver\r\n\t\t? customResolver\r\n\t\t: new Resolver(fileSystem, normalizedOptions);\r\n\r\n\t//// pipeline ////\r\n\r\n\tresolver.ensureHook(\"resolve\");\r\n\tresolver.ensureHook(\"internalResolve\");\r\n\tresolver.ensureHook(\"newInternalResolve\");\r\n\tresolver.ensureHook(\"parsedResolve\");\r\n\tresolver.ensureHook(\"describedResolve\");\r\n\tresolver.ensureHook(\"internal\");\r\n\tresolver.ensureHook(\"rawModule\");\r\n\tresolver.ensureHook(\"module\");\r\n\tresolver.ensureHook(\"resolveAsModule\");\r\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\r\n\tresolver.ensureHook(\"resolveInPackage\");\r\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\r\n\tresolver.ensureHook(\"relative\");\r\n\tresolver.ensureHook(\"describedRelative\");\r\n\tresolver.ensureHook(\"directory\");\r\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\r\n\tresolver.ensureHook(\"existingDirectory\");\r\n\tresolver.ensureHook(\"undescribedRawFile\");\r\n\tresolver.ensureHook(\"rawFile\");\r\n\tresolver.ensureHook(\"file\");\r\n\tresolver.ensureHook(\"finalFile\");\r\n\tresolver.ensureHook(\"existingFile\");\r\n\tresolver.ensureHook(\"resolved\");\r\n\r\n\t// TODO remove in next major\r\n\t// cspell:word Interal\r\n\t// Backward-compat\r\n\tresolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\r\n\r\n\t// resolve\r\n\tfor (const { source, resolveOptions } of [\r\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\r\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\r\n\t]) {\r\n\t\tif (unsafeCache) {\r\n\t\t\tplugins.push(\r\n\t\t\t\tnew UnsafeCachePlugin(\r\n\t\t\t\t\tsource,\r\n\t\t\t\t\tcachePredicate,\r\n\t\t\t\t\tunsafeCache,\r\n\t\t\t\t\tcacheWithContext,\r\n\t\t\t\t\t`new-${source}`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tplugins.push(\r\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\r\n\t\t}\r\n\t}\r\n\r\n\t// parsed-resolve\r\n\tplugins.push(\r\n\t\tnew DescriptionFilePlugin(\r\n\t\t\t\"parsed-resolve\",\r\n\t\t\tdescriptionFiles,\r\n\t\t\tfalse,\r\n\t\t\t\"described-resolve\"\r\n\t\t)\r\n\t);\r\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\r\n\r\n\t// described-resolve\r\n\tplugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\r\n\tif (fallback.length > 0) {\r\n\t\tplugins.push(\r\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\r\n\t\t);\r\n\t}\r\n\r\n\t// normal-resolve\r\n\tif (alias.length > 0)\r\n\t\tplugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\r\n\taliasFields.forEach(item => {\r\n\t\tplugins.push(\r\n\t\t\tnew AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\")\r\n\t\t);\r\n\t});\r\n\tif (preferRelative) {\r\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\r\n\t}\r\n\tplugins.push(\r\n\t\tnew ConditionalPlugin(\r\n\t\t\t\"after-normal-resolve\",\r\n\t\t\t{ module: true },\r\n\t\t\t\"resolve as module\",\r\n\t\t\tfalse,\r\n\t\t\t\"raw-module\"\r\n\t\t)\r\n\t);\r\n\tplugins.push(\r\n\t\tnew ConditionalPlugin(\r\n\t\t\t\"after-normal-resolve\",\r\n\t\t\t{ internal: true },\r\n\t\t\t\"resolve as internal import\",\r\n\t\t\tfalse,\r\n\t\t\t\"internal\"\r\n\t\t)\r\n\t);\r\n\tif (preferAbsolute) {\r\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\r\n\t}\r\n\tif (roots.size > 0) {\r\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\r\n\t}\r\n\tif (!preferRelative && !preferAbsolute) {\r\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\r\n\t}\r\n\r\n\t// internal\r\n\timportsFields.forEach(importsField => {\r\n\t\tplugins.push(\r\n\t\t\tnew ImportsFieldPlugin(\r\n\t\t\t\t\"internal\",\r\n\t\t\t\tconditionNames,\r\n\t\t\t\timportsField,\r\n\t\t\t\t\"relative\",\r\n\t\t\t\t\"internal-resolve\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\t// raw-module\r\n\texportsFields.forEach(exportsField => {\r\n\t\tplugins.push(\r\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\r\n\t\t);\r\n\t});\r\n\tmodules.forEach(item => {\r\n\t\tif (Array.isArray(item)) {\r\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\r\n\t\t\t\tplugins.push(\r\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\r\n\t\t\t\t\t\t\"raw-module\",\r\n\t\t\t\t\t\titem.filter(i => i !== \"node_modules\"),\r\n\t\t\t\t\t\t\"module\"\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tplugins.push(\r\n\t\t\t\t\tnew PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\")\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tplugins.push(\r\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\r\n\t\t\t\t\t\t\"raw-module\",\r\n\t\t\t\t\t\titem,\r\n\t\t\t\t\t\t\"module\"\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\r\n\t\t}\r\n\t});\r\n\r\n\t// module\r\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\r\n\r\n\t// resolve-as-module\r\n\tif (!resolveToContext) {\r\n\t\tplugins.push(\r\n\t\t\tnew ConditionalPlugin(\r\n\t\t\t\t\"resolve-as-module\",\r\n\t\t\t\t{ directory: false, request: \".\" },\r\n\t\t\t\t\"single file module\",\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"undescribed-raw-file\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\tplugins.push(\r\n\t\tnew DirectoryExistsPlugin(\r\n\t\t\t\"resolve-as-module\",\r\n\t\t\t\"undescribed-resolve-in-package\"\r\n\t\t)\r\n\t);\r\n\r\n\t// undescribed-resolve-in-package\r\n\tplugins.push(\r\n\t\tnew DescriptionFilePlugin(\r\n\t\t\t\"undescribed-resolve-in-package\",\r\n\t\t\tdescriptionFiles,\r\n\t\t\tfalse,\r\n\t\t\t\"resolve-in-package\"\r\n\t\t)\r\n\t);\r\n\tplugins.push(\r\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\r\n\t);\r\n\r\n\t// resolve-in-package\r\n\texportsFields.forEach(exportsField => {\r\n\t\tplugins.push(\r\n\t\t\tnew ExportsFieldPlugin(\r\n\t\t\t\t\"resolve-in-package\",\r\n\t\t\t\tconditionNames,\r\n\t\t\t\texportsField,\r\n\t\t\t\t\"relative\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\tplugins.push(\r\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\r\n\t);\r\n\r\n\t// resolve-in-existing-directory\r\n\tplugins.push(\r\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\r\n\t);\r\n\r\n\t// relative\r\n\tplugins.push(\r\n\t\tnew DescriptionFilePlugin(\r\n\t\t\t\"relative\",\r\n\t\t\tdescriptionFiles,\r\n\t\t\ttrue,\r\n\t\t\t\"described-relative\"\r\n\t\t)\r\n\t);\r\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\r\n\r\n\t// described-relative\r\n\tif (resolveToContext) {\r\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\r\n\t} else {\r\n\t\tplugins.push(\r\n\t\t\tnew ConditionalPlugin(\r\n\t\t\t\t\"described-relative\",\r\n\t\t\t\t{ directory: false },\r\n\t\t\t\tnull,\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"raw-file\"\r\n\t\t\t)\r\n\t\t);\r\n\t\tplugins.push(\r\n\t\t\tnew ConditionalPlugin(\r\n\t\t\t\t\"described-relative\",\r\n\t\t\t\t{ fullySpecified: false },\r\n\t\t\t\t\"as directory\",\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"directory\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t// directory\r\n\tplugins.push(\r\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\r\n\t);\r\n\r\n\tif (resolveToContext) {\r\n\t\t// undescribed-existing-directory\r\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\r\n\t} else {\r\n\t\t// undescribed-existing-directory\r\n\t\tplugins.push(\r\n\t\t\tnew DescriptionFilePlugin(\r\n\t\t\t\t\"undescribed-existing-directory\",\r\n\t\t\t\tdescriptionFiles,\r\n\t\t\t\tfalse,\r\n\t\t\t\t\"existing-directory\"\r\n\t\t\t)\r\n\t\t);\r\n\t\tmainFiles.forEach(item => {\r\n\t\t\tplugins.push(\r\n\t\t\t\tnew UseFilePlugin(\r\n\t\t\t\t\t\"undescribed-existing-directory\",\r\n\t\t\t\t\titem,\r\n\t\t\t\t\t\"undescribed-raw-file\"\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\t// described-existing-directory\r\n\t\tmainFields.forEach(item => {\r\n\t\t\tplugins.push(\r\n\t\t\t\tnew MainFieldPlugin(\r\n\t\t\t\t\t\"existing-directory\",\r\n\t\t\t\t\titem,\r\n\t\t\t\t\t\"resolve-in-existing-directory\"\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\t\tmainFiles.forEach(item => {\r\n\t\t\tplugins.push(\r\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\t// undescribed-raw-file\r\n\t\tplugins.push(\r\n\t\t\tnew DescriptionFilePlugin(\r\n\t\t\t\t\"undescribed-raw-file\",\r\n\t\t\t\tdescriptionFiles,\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"raw-file\"\r\n\t\t\t)\r\n\t\t);\r\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\r\n\r\n\t\t// raw-file\r\n\t\tplugins.push(\r\n\t\t\tnew ConditionalPlugin(\r\n\t\t\t\t\"raw-file\",\r\n\t\t\t\t{ fullySpecified: true },\r\n\t\t\t\tnull,\r\n\t\t\t\tfalse,\r\n\t\t\t\t\"file\"\r\n\t\t\t)\r\n\t\t);\r\n\t\tif (!enforceExtension) {\r\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\r\n\t\t}\r\n\t\textensions.forEach(item => {\r\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\r\n\t\t});\r\n\r\n\t\t// file\r\n\t\tif (alias.length > 0)\r\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\r\n\t\taliasFields.forEach(item => {\r\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\r\n\t\t});\r\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\r\n\r\n\t\t// final-file\r\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\r\n\r\n\t\t// existing-file\r\n\t\tif (symlinks)\r\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\r\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\r\n\t}\r\n\r\n\t// resolved\r\n\tif (restrictions.size > 0) {\r\n\t\tplugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\r\n\t}\r\n\tplugins.push(new ResultPlugin(resolver.hooks.resolved));\r\n\r\n\t//// RESOLVER ////\r\n\r\n\tfor (const plugin of plugins) {\r\n\t\tif (typeof plugin === \"function\") {\r\n\t\t\tplugin.call(resolver, resolver);\r\n\t\t} else {\r\n\t\t\tplugin.apply(resolver);\r\n\t\t}\r\n\t}\r\n\r\n\treturn resolver;\r\n};\r\n\r\n/**\r\n * Merging filtered elements\r\n * @param {string[]} array source array\r\n * @param {function(string): boolean} filter predicate\r\n * @returns {Array<string | string[]>} merge result\r\n */\r\nfunction mergeFilteredToArray(array, filter) {\r\n\t/** @type {Array<string | string[]>} */\r\n\tconst result = [];\r\n\tconst set = new Set(array);\r\n\r\n\tfor (const item of set) {\r\n\t\tif (filter(item)) {\r\n\t\t\tconst lastElement =\r\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\r\n\t\t\tif (Array.isArray(lastElement)) {\r\n\t\t\t\tlastElement.push(item);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push([item]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.push(item);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}