{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    resultReturns,\n    onDone\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)}\\n} else {\\n${next()}}\\n`,\n      resultReturns,\n      onDone\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\n\nfunction AsyncSeriesBailHook(args = [], name = undefined) {\n  const hook = new Hook(args, name);\n  hook.constructor = AsyncSeriesBailHook;\n  hook.compile = COMPILE;\n  hook._call = undefined;\n  hook.call = undefined;\n  return hook;\n}\n\nAsyncSeriesBailHook.prototype = null;\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","content","onError","onResult","resultReturns","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","COMPILE","options","setup","create","AsyncSeriesBailHook","args","name","undefined","hook","constructor","compile","_call","call","prototype","module","exports"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onResult, resultReturns, onDone }) {\r\n\t\treturn this.callTapsSeries({\r\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\r\n\t\t\tonResult: (i, result, next) =>\r\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\r\n\t\t\t\t\tresult\r\n\t\t\t\t)}\\n} else {\\n${next()}}\\n`,\r\n\t\t\tresultReturns,\r\n\t\t\tonDone\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst factory = new AsyncSeriesBailHookCodeFactory();\r\n\r\nconst COMPILE = function(options) {\r\n\tfactory.setup(this, options);\r\n\treturn factory.create(options);\r\n};\r\n\r\nfunction AsyncSeriesBailHook(args = [], name = undefined) {\r\n\tconst hook = new Hook(args, name);\r\n\thook.constructor = AsyncSeriesBailHook;\r\n\thook.compile = COMPILE;\r\n\thook._call = undefined;\r\n\thook.call = undefined;\r\n\treturn hook;\r\n}\r\n\r\nAsyncSeriesBailHook.prototype = null;\r\n\r\nmodule.exports = AsyncSeriesBailHook;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,8BAAN,SAA6CD,eAA7C,CAA6D;EAC5DE,OAAO,CAAC;IAAEC,OAAF;IAAWC,QAAX;IAAqBC,aAArB;IAAoCC;EAApC,CAAD,EAA+C;IACrD,OAAO,KAAKC,cAAL,CAAoB;MAC1BJ,OAAO,EAAE,CAACK,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BR,OAAO,CAACM,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;MAE1BP,QAAQ,EAAE,CAACI,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KACR,MAAKE,MAAO,sBAAqBR,QAAQ,CACzCQ,MADyC,CAExC,eAAcF,IAAI,EAAG,KALE;MAM1BL,aAN0B;MAO1BC;IAP0B,CAApB,CAAP;EASA;;AAX2D;;AAc7D,MAAMO,OAAO,GAAG,IAAIZ,8BAAJ,EAAhB;;AAEA,MAAMa,OAAO,GAAG,UAASC,OAAT,EAAkB;EACjCF,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;EACA,OAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA,CAHD;;AAKA,SAASG,mBAAT,CAA6BC,IAAI,GAAG,EAApC,EAAwCC,IAAI,GAAGC,SAA/C,EAA0D;EACzD,MAAMC,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,IAAT,EAAeC,IAAf,CAAb;EACAE,IAAI,CAACC,WAAL,GAAmBL,mBAAnB;EACAI,IAAI,CAACE,OAAL,GAAeV,OAAf;EACAQ,IAAI,CAACG,KAAL,GAAaJ,SAAb;EACAC,IAAI,CAACI,IAAL,GAAYL,SAAZ;EACA,OAAOC,IAAP;AACA;;AAEDJ,mBAAmB,CAACS,SAApB,GAAgC,IAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiBX,mBAAjB"},"metadata":{},"sourceType":"script"}