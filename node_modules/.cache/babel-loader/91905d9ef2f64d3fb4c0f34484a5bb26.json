{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nconst ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst CONTINUATION_BIT = 0x20;\nconst END_SEGMENT_BIT = 0x40;\nconst NEXT_LINE = END_SEGMENT_BIT | 0x01;\nconst INVALID = END_SEGMENT_BIT | 0x02;\nconst DATA_MASK = 0x1f;\nconst ccToValue = new Uint8Array(\"z\".charCodeAt(0) + 1);\n{\n  ccToValue.fill(INVALID);\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    ccToValue[ALPHABET.charCodeAt(i)] = i;\n  }\n\n  ccToValue[\",\".charCodeAt(0)] = END_SEGMENT_BIT;\n  ccToValue[\";\".charCodeAt(0)] = NEXT_LINE;\n}\nconst ccMax = ccToValue.length - 1;\n/**\r\n * @param {string} mappings the mappings string\r\n * @param {function(number, number, number, number, number, number): void} onMapping called for each mapping\r\n * @returns {void}\r\n */\n\nconst readMappings = (mappings, onMapping) => {\n  // generatedColumn, [sourceIndex, originalLine, orignalColumn, [nameIndex]]\n  const currentData = new Uint32Array([0, 0, 1, 0, 0]);\n  let currentDataPos = 0; // currentValue will include a sign bit at bit 0\n\n  let currentValue = 0;\n  let currentValuePos = 0;\n  let generatedLine = 1;\n  let generatedColumn = -1;\n\n  for (let i = 0; i < mappings.length; i++) {\n    const cc = mappings.charCodeAt(i);\n    if (cc > ccMax) continue;\n    const value = ccToValue[cc];\n\n    if ((value & END_SEGMENT_BIT) !== 0) {\n      // End current segment\n      if (currentData[0] > generatedColumn) {\n        if (currentDataPos === 1) {\n          onMapping(generatedLine, currentData[0], -1, -1, -1, -1);\n        } else if (currentDataPos === 4) {\n          onMapping(generatedLine, currentData[0], currentData[1], currentData[2], currentData[3], -1);\n        } else if (currentDataPos === 5) {\n          onMapping(generatedLine, currentData[0], currentData[1], currentData[2], currentData[3], currentData[4]);\n        }\n\n        generatedColumn = currentData[0];\n      }\n\n      currentDataPos = 0;\n\n      if (value === NEXT_LINE) {\n        // Start new line\n        generatedLine++;\n        currentData[0] = 0;\n        generatedColumn = -1;\n      }\n    } else if ((value & CONTINUATION_BIT) === 0) {\n      // last sextet\n      currentValue |= value << currentValuePos;\n      const finalValue = currentValue & 1 ? -(currentValue >> 1) : currentValue >> 1;\n      currentData[currentDataPos++] += finalValue;\n      currentValuePos = 0;\n      currentValue = 0;\n    } else {\n      currentValue |= (value & DATA_MASK) << currentValuePos;\n      currentValuePos += 5;\n    }\n  } // End current segment\n\n\n  if (currentDataPos === 1) {\n    onMapping(generatedLine, currentData[0], -1, -1, -1, -1);\n  } else if (currentDataPos === 4) {\n    onMapping(generatedLine, currentData[0], currentData[1], currentData[2], currentData[3], -1);\n  } else if (currentDataPos === 5) {\n    onMapping(generatedLine, currentData[0], currentData[1], currentData[2], currentData[3], currentData[4]);\n  }\n};\n\nmodule.exports = readMappings;","map":{"version":3,"names":["ALPHABET","CONTINUATION_BIT","END_SEGMENT_BIT","NEXT_LINE","INVALID","DATA_MASK","ccToValue","Uint8Array","charCodeAt","fill","i","length","ccMax","readMappings","mappings","onMapping","currentData","Uint32Array","currentDataPos","currentValue","currentValuePos","generatedLine","generatedColumn","cc","value","finalValue","module","exports"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/webpack-sources/lib/helpers/readMappings.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst ALPHABET =\r\n\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\nconst CONTINUATION_BIT = 0x20;\r\nconst END_SEGMENT_BIT = 0x40;\r\nconst NEXT_LINE = END_SEGMENT_BIT | 0x01;\r\nconst INVALID = END_SEGMENT_BIT | 0x02;\r\nconst DATA_MASK = 0x1f;\r\n\r\nconst ccToValue = new Uint8Array(\"z\".charCodeAt(0) + 1);\r\n{\r\n\tccToValue.fill(INVALID);\r\n\tfor (let i = 0; i < ALPHABET.length; i++) {\r\n\t\tccToValue[ALPHABET.charCodeAt(i)] = i;\r\n\t}\r\n\tccToValue[\",\".charCodeAt(0)] = END_SEGMENT_BIT;\r\n\tccToValue[\";\".charCodeAt(0)] = NEXT_LINE;\r\n}\r\nconst ccMax = ccToValue.length - 1;\r\n\r\n/**\r\n * @param {string} mappings the mappings string\r\n * @param {function(number, number, number, number, number, number): void} onMapping called for each mapping\r\n * @returns {void}\r\n */\r\nconst readMappings = (mappings, onMapping) => {\r\n\t// generatedColumn, [sourceIndex, originalLine, orignalColumn, [nameIndex]]\r\n\tconst currentData = new Uint32Array([0, 0, 1, 0, 0]);\r\n\tlet currentDataPos = 0;\r\n\t// currentValue will include a sign bit at bit 0\r\n\tlet currentValue = 0;\r\n\tlet currentValuePos = 0;\r\n\tlet generatedLine = 1;\r\n\tlet generatedColumn = -1;\r\n\tfor (let i = 0; i < mappings.length; i++) {\r\n\t\tconst cc = mappings.charCodeAt(i);\r\n\t\tif (cc > ccMax) continue;\r\n\t\tconst value = ccToValue[cc];\r\n\t\tif ((value & END_SEGMENT_BIT) !== 0) {\r\n\t\t\t// End current segment\r\n\t\t\tif (currentData[0] > generatedColumn) {\r\n\t\t\t\tif (currentDataPos === 1) {\r\n\t\t\t\t\tonMapping(generatedLine, currentData[0], -1, -1, -1, -1);\r\n\t\t\t\t} else if (currentDataPos === 4) {\r\n\t\t\t\t\tonMapping(\r\n\t\t\t\t\t\tgeneratedLine,\r\n\t\t\t\t\t\tcurrentData[0],\r\n\t\t\t\t\t\tcurrentData[1],\r\n\t\t\t\t\t\tcurrentData[2],\r\n\t\t\t\t\t\tcurrentData[3],\r\n\t\t\t\t\t\t-1\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (currentDataPos === 5) {\r\n\t\t\t\t\tonMapping(\r\n\t\t\t\t\t\tgeneratedLine,\r\n\t\t\t\t\t\tcurrentData[0],\r\n\t\t\t\t\t\tcurrentData[1],\r\n\t\t\t\t\t\tcurrentData[2],\r\n\t\t\t\t\t\tcurrentData[3],\r\n\t\t\t\t\t\tcurrentData[4]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tgeneratedColumn = currentData[0];\r\n\t\t\t}\r\n\t\t\tcurrentDataPos = 0;\r\n\t\t\tif (value === NEXT_LINE) {\r\n\t\t\t\t// Start new line\r\n\t\t\t\tgeneratedLine++;\r\n\t\t\t\tcurrentData[0] = 0;\r\n\t\t\t\tgeneratedColumn = -1;\r\n\t\t\t}\r\n\t\t} else if ((value & CONTINUATION_BIT) === 0) {\r\n\t\t\t// last sextet\r\n\t\t\tcurrentValue |= value << currentValuePos;\r\n\t\t\tconst finalValue =\r\n\t\t\t\tcurrentValue & 1 ? -(currentValue >> 1) : currentValue >> 1;\r\n\t\t\tcurrentData[currentDataPos++] += finalValue;\r\n\t\t\tcurrentValuePos = 0;\r\n\t\t\tcurrentValue = 0;\r\n\t\t} else {\r\n\t\t\tcurrentValue |= (value & DATA_MASK) << currentValuePos;\r\n\t\t\tcurrentValuePos += 5;\r\n\t\t}\r\n\t}\r\n\t// End current segment\r\n\tif (currentDataPos === 1) {\r\n\t\tonMapping(generatedLine, currentData[0], -1, -1, -1, -1);\r\n\t} else if (currentDataPos === 4) {\r\n\t\tonMapping(\r\n\t\t\tgeneratedLine,\r\n\t\t\tcurrentData[0],\r\n\t\t\tcurrentData[1],\r\n\t\t\tcurrentData[2],\r\n\t\t\tcurrentData[3],\r\n\t\t\t-1\r\n\t\t);\r\n\t} else if (currentDataPos === 5) {\r\n\t\tonMapping(\r\n\t\t\tgeneratedLine,\r\n\t\t\tcurrentData[0],\r\n\t\t\tcurrentData[1],\r\n\t\t\tcurrentData[2],\r\n\t\t\tcurrentData[3],\r\n\t\t\tcurrentData[4]\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports = readMappings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}