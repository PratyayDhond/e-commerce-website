{"ast":null,"code":"import { write, read } from \"@xtuc/ieee754\";\n/**\r\n * According to https://webassembly.github.io/spec/binary/values.html#binary-float\r\n * n = 32/8\r\n */\n\nexport var NUMBER_OF_BYTE_F32 = 4;\n/**\r\n * According to https://webassembly.github.io/spec/binary/values.html#binary-float\r\n * n = 64/8\r\n */\n\nexport var NUMBER_OF_BYTE_F64 = 8;\nexport var SINGLE_PRECISION_MANTISSA = 23;\nexport var DOUBLE_PRECISION_MANTISSA = 52;\nexport function encodeF32(v) {\n  var buffer = [];\n  write(buffer, v, 0, true, SINGLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F32);\n  return buffer;\n}\nexport function encodeF64(v) {\n  var buffer = [];\n  write(buffer, v, 0, true, DOUBLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F64);\n  return buffer;\n}\nexport function decodeF32(bytes) {\n  var buffer = Buffer.from(bytes);\n  return read(buffer, 0, true, SINGLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F32);\n}\nexport function decodeF64(bytes) {\n  var buffer = Buffer.from(bytes);\n  return read(buffer, 0, true, DOUBLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F64);\n}","map":{"version":3,"names":["write","read","NUMBER_OF_BYTE_F32","NUMBER_OF_BYTE_F64","SINGLE_PRECISION_MANTISSA","DOUBLE_PRECISION_MANTISSA","encodeF32","v","buffer","encodeF64","decodeF32","bytes","Buffer","from","decodeF64"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/@webassemblyjs/ieee754/esm/index.js"],"sourcesContent":["import { write, read } from \"@xtuc/ieee754\";\r\n/**\r\n * According to https://webassembly.github.io/spec/binary/values.html#binary-float\r\n * n = 32/8\r\n */\r\n\r\nexport var NUMBER_OF_BYTE_F32 = 4;\r\n/**\r\n * According to https://webassembly.github.io/spec/binary/values.html#binary-float\r\n * n = 64/8\r\n */\r\n\r\nexport var NUMBER_OF_BYTE_F64 = 8;\r\nexport var SINGLE_PRECISION_MANTISSA = 23;\r\nexport var DOUBLE_PRECISION_MANTISSA = 52;\r\nexport function encodeF32(v) {\r\n  var buffer = [];\r\n  write(buffer, v, 0, true, SINGLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F32);\r\n  return buffer;\r\n}\r\nexport function encodeF64(v) {\r\n  var buffer = [];\r\n  write(buffer, v, 0, true, DOUBLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F64);\r\n  return buffer;\r\n}\r\nexport function decodeF32(bytes) {\r\n  var buffer = Buffer.from(bytes);\r\n  return read(buffer, 0, true, SINGLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F32);\r\n}\r\nexport function decodeF64(bytes) {\r\n  var buffer = Buffer.from(bytes);\r\n  return read(buffer, 0, true, DOUBLE_PRECISION_MANTISSA, NUMBER_OF_BYTE_F64);\r\n}"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,eAA5B;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,kBAAkB,GAAG,CAAzB;AACP;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,kBAAkB,GAAG,CAAzB;AACP,OAAO,IAAIC,yBAAyB,GAAG,EAAhC;AACP,OAAO,IAAIC,yBAAyB,GAAG,EAAhC;AACP,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;EAC3B,IAAIC,MAAM,GAAG,EAAb;EACAR,KAAK,CAACQ,MAAD,EAASD,CAAT,EAAY,CAAZ,EAAe,IAAf,EAAqBH,yBAArB,EAAgDF,kBAAhD,CAAL;EACA,OAAOM,MAAP;AACD;AACD,OAAO,SAASC,SAAT,CAAmBF,CAAnB,EAAsB;EAC3B,IAAIC,MAAM,GAAG,EAAb;EACAR,KAAK,CAACQ,MAAD,EAASD,CAAT,EAAY,CAAZ,EAAe,IAAf,EAAqBF,yBAArB,EAAgDF,kBAAhD,CAAL;EACA,OAAOK,MAAP;AACD;AACD,OAAO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;EAC/B,IAAIH,MAAM,GAAGI,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAb;EACA,OAAOV,IAAI,CAACO,MAAD,EAAS,CAAT,EAAY,IAAZ,EAAkBJ,yBAAlB,EAA6CF,kBAA7C,CAAX;AACD;AACD,OAAO,SAASY,SAAT,CAAmBH,KAAnB,EAA0B;EAC/B,IAAIH,MAAM,GAAGI,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAb;EACA,OAAOV,IAAI,CAACO,MAAD,EAAS,CAAT,EAAY,IAAZ,EAAkBH,yBAAlB,EAA6CF,kBAA7C,CAAX;AACD"},"metadata":{},"sourceType":"module"}