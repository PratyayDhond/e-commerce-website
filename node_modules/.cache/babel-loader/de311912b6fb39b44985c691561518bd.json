{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nexports.getSourceAndMap = (inputSource, options) => {\n  let code = \"\";\n  let mappings = \"\";\n  let sources = [];\n  let sourcesContent = [];\n  let names = [];\n  const addMapping = createMappingsSerializer(options);\n  const {\n    source\n  } = inputSource.streamChunks(Object.assign({}, options, {\n    finalSource: true\n  }), (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) => {\n    if (chunk !== undefined) code += chunk;\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, (sourceIndex, source, sourceContent) => {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n\n    sources[sourceIndex] = source;\n\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, (nameIndex, name) => {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n\n    names[nameIndex] = name;\n  });\n  return {\n    source: source !== undefined ? source : code,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings,\n      sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names\n    } : null\n  };\n};\n\nexports.getMap = (source, options) => {\n  let mappings = \"\";\n  let sources = [];\n  let sourcesContent = [];\n  let names = [];\n  const addMapping = createMappingsSerializer(options);\n  source.streamChunks(Object.assign({}, options, {\n    source: false,\n    finalSource: true\n  }), (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) => {\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, (sourceIndex, source, sourceContent) => {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n\n    sources[sourceIndex] = source;\n\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, (nameIndex, name) => {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n\n    names[nameIndex] = name;\n  });\n  return mappings.length > 0 ? {\n    version: 3,\n    file: \"x\",\n    mappings,\n    sources,\n    sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n    names\n  } : null;\n};","map":{"version":3,"names":["createMappingsSerializer","require","exports","getSourceAndMap","inputSource","options","code","mappings","sources","sourcesContent","names","addMapping","source","streamChunks","Object","assign","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","sourceContent","length","push","name","map","version","file","getMap"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/webpack-sources/lib/helpers/getFromStreamChunks.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\r\n\r\nexports.getSourceAndMap = (inputSource, options) => {\r\n\tlet code = \"\";\r\n\tlet mappings = \"\";\r\n\tlet sources = [];\r\n\tlet sourcesContent = [];\r\n\tlet names = [];\r\n\tconst addMapping = createMappingsSerializer(options);\r\n\tconst { source } = inputSource.streamChunks(\r\n\t\tObject.assign({}, options, { finalSource: true }),\r\n\t\t(\r\n\t\t\tchunk,\r\n\t\t\tgeneratedLine,\r\n\t\t\tgeneratedColumn,\r\n\t\t\tsourceIndex,\r\n\t\t\toriginalLine,\r\n\t\t\toriginalColumn,\r\n\t\t\tnameIndex\r\n\t\t) => {\r\n\t\t\tif (chunk !== undefined) code += chunk;\r\n\t\t\tmappings += addMapping(\r\n\t\t\t\tgeneratedLine,\r\n\t\t\t\tgeneratedColumn,\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\toriginalLine,\r\n\t\t\t\toriginalColumn,\r\n\t\t\t\tnameIndex\r\n\t\t\t);\r\n\t\t},\r\n\t\t(sourceIndex, source, sourceContent) => {\r\n\t\t\twhile (sources.length < sourceIndex) {\r\n\t\t\t\tsources.push(null);\r\n\t\t\t}\r\n\t\t\tsources[sourceIndex] = source;\r\n\t\t\tif (sourceContent !== undefined) {\r\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\r\n\t\t\t\t\tsourcesContent.push(null);\r\n\t\t\t\t}\r\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\r\n\t\t\t}\r\n\t\t},\r\n\t\t(nameIndex, name) => {\r\n\t\t\twhile (names.length < nameIndex) {\r\n\t\t\t\tnames.push(null);\r\n\t\t\t}\r\n\t\t\tnames[nameIndex] = name;\r\n\t\t}\r\n\t);\r\n\treturn {\r\n\t\tsource: source !== undefined ? source : code,\r\n\t\tmap:\r\n\t\t\tmappings.length > 0\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tversion: 3,\r\n\t\t\t\t\t\tfile: \"x\",\r\n\t\t\t\t\t\tmappings,\r\n\t\t\t\t\t\tsources,\r\n\t\t\t\t\t\tsourcesContent:\r\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\r\n\t\t\t\t\t\tnames\r\n\t\t\t\t  }\r\n\t\t\t\t: null\r\n\t};\r\n};\r\n\r\nexports.getMap = (source, options) => {\r\n\tlet mappings = \"\";\r\n\tlet sources = [];\r\n\tlet sourcesContent = [];\r\n\tlet names = [];\r\n\tconst addMapping = createMappingsSerializer(options);\r\n\tsource.streamChunks(\r\n\t\tObject.assign({}, options, { source: false, finalSource: true }),\r\n\t\t(\r\n\t\t\tchunk,\r\n\t\t\tgeneratedLine,\r\n\t\t\tgeneratedColumn,\r\n\t\t\tsourceIndex,\r\n\t\t\toriginalLine,\r\n\t\t\toriginalColumn,\r\n\t\t\tnameIndex\r\n\t\t) => {\r\n\t\t\tmappings += addMapping(\r\n\t\t\t\tgeneratedLine,\r\n\t\t\t\tgeneratedColumn,\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\toriginalLine,\r\n\t\t\t\toriginalColumn,\r\n\t\t\t\tnameIndex\r\n\t\t\t);\r\n\t\t},\r\n\t\t(sourceIndex, source, sourceContent) => {\r\n\t\t\twhile (sources.length < sourceIndex) {\r\n\t\t\t\tsources.push(null);\r\n\t\t\t}\r\n\t\t\tsources[sourceIndex] = source;\r\n\t\t\tif (sourceContent !== undefined) {\r\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\r\n\t\t\t\t\tsourcesContent.push(null);\r\n\t\t\t\t}\r\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\r\n\t\t\t}\r\n\t\t},\r\n\t\t(nameIndex, name) => {\r\n\t\t\twhile (names.length < nameIndex) {\r\n\t\t\t\tnames.push(null);\r\n\t\t\t}\r\n\t\t\tnames[nameIndex] = name;\r\n\t\t}\r\n\t);\r\n\treturn mappings.length > 0\r\n\t\t? {\r\n\t\t\t\tversion: 3,\r\n\t\t\t\tfile: \"x\",\r\n\t\t\t\tmappings,\r\n\t\t\t\tsources,\r\n\t\t\t\tsourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\r\n\t\t\t\tnames\r\n\t\t  }\r\n\t\t: null;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}