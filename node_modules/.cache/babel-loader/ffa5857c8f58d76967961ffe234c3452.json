{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nmodule.exports = function defFunc(ajv) {\n  var transform = {\n    trimLeft: function (value) {\n      return value.replace(/^[\\s]+/, '');\n    },\n    trimRight: function (value) {\n      return value.replace(/[\\s]+$/, '');\n    },\n    trim: function (value) {\n      return value.trim();\n    },\n    toLowerCase: function (value) {\n      return value.toLowerCase();\n    },\n    toUpperCase: function (value) {\n      return value.toUpperCase();\n    },\n    toEnumCase: function (value, cfg) {\n      return cfg.hash[makeHashTableKey(value)] || value;\n    }\n  };\n  defFunc.definition = {\n    type: 'string',\n    errors: false,\n    modifying: true,\n    valid: true,\n    compile: function (schema, parentSchema) {\n      var cfg;\n\n      if (schema.indexOf('toEnumCase') !== -1) {\n        // build hash table to enum values\n        cfg = {\n          hash: {}\n        }; // requires `enum` in schema\n\n        if (!parentSchema.enum) throw new Error('Missing enum. To use `transform:[\"toEnumCase\"]`, `enum:[...]` is required.');\n\n        for (var i = parentSchema.enum.length; i--; i) {\n          var v = parentSchema.enum[i];\n          if (typeof v !== 'string') continue;\n          var k = makeHashTableKey(v); // requires all `enum` values have unique keys\n\n          if (cfg.hash[k]) throw new Error('Invalid enum uniqueness. To use `transform:[\"toEnumCase\"]`, all values must be unique when case insensitive.');\n          cfg.hash[k] = v;\n        }\n      }\n\n      return function (data, dataPath, object, key) {\n        // skip if value only\n        if (!object) return; // apply transform in order provided\n\n        for (var j = 0, l = schema.length; j < l; j++) data = transform[schema[j]](data, cfg);\n\n        object[key] = data;\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['trimLeft', 'trimRight', 'trim', 'toLowerCase', 'toUpperCase', 'toEnumCase']\n      }\n    }\n  };\n  ajv.addKeyword('transform', defFunc.definition);\n  return ajv;\n\n  function makeHashTableKey(value) {\n    return value.toLowerCase();\n  }\n};","map":{"version":3,"names":["module","exports","defFunc","ajv","transform","trimLeft","value","replace","trimRight","trim","toLowerCase","toUpperCase","toEnumCase","cfg","hash","makeHashTableKey","definition","type","errors","modifying","valid","compile","schema","parentSchema","indexOf","enum","Error","i","length","v","k","data","dataPath","object","key","j","l","metaSchema","items","addKeyword"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/ajv-keywords/keywords/transform.js"],"sourcesContent":["'use strict';\r\n\r\nmodule.exports = function defFunc (ajv) {\r\n  var transform = {\r\n    trimLeft: function (value) {\r\n      return value.replace(/^[\\s]+/, '');\r\n    },\r\n    trimRight: function (value) {\r\n      return value.replace(/[\\s]+$/, '');\r\n    },\r\n    trim: function (value) {\r\n      return value.trim();\r\n    },\r\n    toLowerCase: function (value) {\r\n      return value.toLowerCase();\r\n    },\r\n    toUpperCase: function (value) {\r\n      return value.toUpperCase();\r\n    },\r\n    toEnumCase: function (value, cfg) {\r\n      return cfg.hash[makeHashTableKey(value)] || value;\r\n    }\r\n  };\r\n\r\n  defFunc.definition = {\r\n    type: 'string',\r\n    errors: false,\r\n    modifying: true,\r\n    valid: true,\r\n    compile: function (schema, parentSchema) {\r\n      var cfg;\r\n\r\n      if (schema.indexOf('toEnumCase') !== -1) {\r\n        // build hash table to enum values\r\n        cfg = {hash: {}};\r\n\r\n        // requires `enum` in schema\r\n        if (!parentSchema.enum)\r\n          throw new Error('Missing enum. To use `transform:[\"toEnumCase\"]`, `enum:[...]` is required.');\r\n        for (var i = parentSchema.enum.length; i--; i) {\r\n          var v = parentSchema.enum[i];\r\n          if (typeof v !== 'string') continue;\r\n          var k = makeHashTableKey(v);\r\n          // requires all `enum` values have unique keys\r\n          if (cfg.hash[k])\r\n            throw new Error('Invalid enum uniqueness. To use `transform:[\"toEnumCase\"]`, all values must be unique when case insensitive.');\r\n          cfg.hash[k] = v;\r\n        }\r\n      }\r\n\r\n      return function (data, dataPath, object, key) {\r\n        // skip if value only\r\n        if (!object) return;\r\n\r\n        // apply transform in order provided\r\n        for (var j = 0, l = schema.length; j < l; j++)\r\n          data = transform[schema[j]](data, cfg);\r\n\r\n        object[key] = data;\r\n      };\r\n    },\r\n    metaSchema: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'string',\r\n        enum: [\r\n          'trimLeft', 'trimRight', 'trim',\r\n          'toLowerCase', 'toUpperCase', 'toEnumCase'\r\n        ]\r\n      }\r\n    }\r\n  };\r\n\r\n  ajv.addKeyword('transform', defFunc.definition);\r\n  return ajv;\r\n\r\n  function makeHashTableKey (value) {\r\n    return value.toLowerCase();\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}