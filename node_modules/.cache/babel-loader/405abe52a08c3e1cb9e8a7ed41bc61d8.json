{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class JoinRequestPlugin {\n  /**\r\n   * @param {string | ResolveStepHook} source source\r\n   * @param {string | ResolveStepHook} target target\r\n   */\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n  /**\r\n   * @param {Resolver} resolver the resolver\r\n   * @returns {void}\r\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"JoinRequestPlugin\", (request, resolveContext, callback) => {\n      const obj = { ...request,\n        path: resolver.join(request.path, request.request),\n        relativePath: request.relativePath && resolver.join(request.relativePath, request.request),\n        request: undefined\n      };\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"names":["module","exports","JoinRequestPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","path","join","relativePath","undefined","doResolve"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"./Resolver\")} Resolver */\r\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\r\n\r\nmodule.exports = class JoinRequestPlugin {\r\n\t/**\r\n\t * @param {string | ResolveStepHook} source source\r\n\t * @param {string | ResolveStepHook} target target\r\n\t */\r\n\tconstructor(source, target) {\r\n\t\tthis.source = source;\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Resolver} resolver the resolver\r\n\t * @returns {void}\r\n\t */\r\n\tapply(resolver) {\r\n\t\tconst target = resolver.ensureHook(this.target);\r\n\t\tresolver\r\n\t\t\t.getHook(this.source)\r\n\t\t\t.tapAsync(\"JoinRequestPlugin\", (request, resolveContext, callback) => {\r\n\t\t\t\tconst obj = {\r\n\t\t\t\t\t...request,\r\n\t\t\t\t\tpath: resolver.join(request.path, request.request),\r\n\t\t\t\t\trelativePath:\r\n\t\t\t\t\t\trequest.relativePath &&\r\n\t\t\t\t\t\tresolver.join(request.relativePath, request.request),\r\n\t\t\t\t\trequest: undefined\r\n\t\t\t\t};\r\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\r\n\t\t\t});\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,iBAAN,CAAwB;EACxC;AACD;AACA;AACA;EACCC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,mBAFX,EAEgC,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACrE,MAAMC,GAAG,GAAG,EACX,GAAGH,OADQ;QAEXI,IAAI,EAAER,QAAQ,CAACS,IAAT,CAAcL,OAAO,CAACI,IAAtB,EAA4BJ,OAAO,CAACA,OAApC,CAFK;QAGXM,YAAY,EACXN,OAAO,CAACM,YAAR,IACAV,QAAQ,CAACS,IAAT,CAAcL,OAAO,CAACM,YAAtB,EAAoCN,OAAO,CAACA,OAA5C,CALU;QAMXA,OAAO,EAAEO;MANE,CAAZ;MAQAX,QAAQ,CAACY,SAAT,CAAmBd,MAAnB,EAA2BS,GAA3B,EAAgC,IAAhC,EAAsCF,cAAtC,EAAsDC,QAAtD;IACA,CAZF;EAaA;;AA7BuC,CAAzC"},"metadata":{},"sourceType":"script"}