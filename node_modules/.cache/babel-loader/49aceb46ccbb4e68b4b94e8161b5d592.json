{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nclass MultiHook {\n  constructor(hooks, name = undefined) {\n    this.hooks = hooks;\n    this.name = name;\n  }\n\n  tap(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tap(options, fn);\n    }\n  }\n\n  tapAsync(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tapAsync(options, fn);\n    }\n  }\n\n  tapPromise(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tapPromise(options, fn);\n    }\n  }\n\n  isUsed() {\n    for (const hook of this.hooks) {\n      if (hook.isUsed()) return true;\n    }\n\n    return false;\n  }\n\n  intercept(interceptor) {\n    for (const hook of this.hooks) {\n      hook.intercept(interceptor);\n    }\n  }\n\n  withOptions(options) {\n    return new MultiHook(this.hooks.map(h => h.withOptions(options)), this.name);\n  }\n\n}\n\nmodule.exports = MultiHook;","map":{"version":3,"names":["Hook","require","MultiHook","constructor","hooks","name","undefined","tap","options","fn","hook","tapAsync","tapPromise","isUsed","intercept","interceptor","withOptions","map","h","module","exports"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/tapable/lib/MultiHook.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\n\r\nclass MultiHook {\r\n\tconstructor(hooks, name = undefined) {\r\n\t\tthis.hooks = hooks;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\ttap(options, fn) {\r\n\t\tfor (const hook of this.hooks) {\r\n\t\t\thook.tap(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\ttapAsync(options, fn) {\r\n\t\tfor (const hook of this.hooks) {\r\n\t\t\thook.tapAsync(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\ttapPromise(options, fn) {\r\n\t\tfor (const hook of this.hooks) {\r\n\t\t\thook.tapPromise(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\tisUsed() {\r\n\t\tfor (const hook of this.hooks) {\r\n\t\t\tif (hook.isUsed()) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tintercept(interceptor) {\r\n\t\tfor (const hook of this.hooks) {\r\n\t\t\thook.intercept(interceptor);\r\n\t\t}\r\n\t}\r\n\r\n\twithOptions(options) {\r\n\t\treturn new MultiHook(\r\n\t\t\tthis.hooks.map(h => h.withOptions(options)),\r\n\t\t\tthis.name\r\n\t\t);\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiHook;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,SAAN,CAAgB;EACfC,WAAW,CAACC,KAAD,EAAQC,IAAI,GAAGC,SAAf,EAA0B;IACpC,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACA;;EAEDE,GAAG,CAACC,OAAD,EAAUC,EAAV,EAAc;IAChB,KAAK,MAAMC,IAAX,IAAmB,KAAKN,KAAxB,EAA+B;MAC9BM,IAAI,CAACH,GAAL,CAASC,OAAT,EAAkBC,EAAlB;IACA;EACD;;EAEDE,QAAQ,CAACH,OAAD,EAAUC,EAAV,EAAc;IACrB,KAAK,MAAMC,IAAX,IAAmB,KAAKN,KAAxB,EAA+B;MAC9BM,IAAI,CAACC,QAAL,CAAcH,OAAd,EAAuBC,EAAvB;IACA;EACD;;EAEDG,UAAU,CAACJ,OAAD,EAAUC,EAAV,EAAc;IACvB,KAAK,MAAMC,IAAX,IAAmB,KAAKN,KAAxB,EAA+B;MAC9BM,IAAI,CAACE,UAAL,CAAgBJ,OAAhB,EAAyBC,EAAzB;IACA;EACD;;EAEDI,MAAM,GAAG;IACR,KAAK,MAAMH,IAAX,IAAmB,KAAKN,KAAxB,EAA+B;MAC9B,IAAIM,IAAI,CAACG,MAAL,EAAJ,EAAmB,OAAO,IAAP;IACnB;;IACD,OAAO,KAAP;EACA;;EAEDC,SAAS,CAACC,WAAD,EAAc;IACtB,KAAK,MAAML,IAAX,IAAmB,KAAKN,KAAxB,EAA+B;MAC9BM,IAAI,CAACI,SAAL,CAAeC,WAAf;IACA;EACD;;EAEDC,WAAW,CAACR,OAAD,EAAU;IACpB,OAAO,IAAIN,SAAJ,CACN,KAAKE,KAAL,CAAWa,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACF,WAAF,CAAcR,OAAd,CAApB,CADM,EAEN,KAAKH,IAFC,CAAP;EAIA;;AA1Cc;;AA6ChBc,MAAM,CAACC,OAAP,GAAiBlB,SAAjB"},"metadata":{},"sourceType":"script"}