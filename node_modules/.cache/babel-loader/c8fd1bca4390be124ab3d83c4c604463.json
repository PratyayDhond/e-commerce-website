{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst getWatcherManager = require(\"./getWatcherManager\");\n\nconst LinkResolver = require(\"./LinkResolver\");\n\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst globToRegExp = require(\"glob-to-regexp\");\n\nconst watchEventSource = require(\"./watchEventSource\");\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_OPTIONS = {};\n\nfunction addWatchersToSet(watchers, set) {\n  for (const ww of watchers) {\n    const w = ww.watcher;\n\n    if (!set.has(w.directoryWatcher)) {\n      set.add(w.directoryWatcher);\n    }\n  }\n}\n\nconst stringToRegexp = ignored => {\n  const source = globToRegExp(ignored, {\n    globstar: true,\n    extended: true\n  }).source;\n  const matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\n  return matchingStart;\n};\n\nconst ignoredToFunction = ignored => {\n  if (Array.isArray(ignored)) {\n    const regexp = new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\n    return x => regexp.test(x.replace(/\\\\/g, \"/\"));\n  } else if (typeof ignored === \"string\") {\n    const regexp = new RegExp(stringToRegexp(ignored));\n    return x => regexp.test(x.replace(/\\\\/g, \"/\"));\n  } else if (ignored instanceof RegExp) {\n    return x => ignored.test(x.replace(/\\\\/g, \"/\"));\n  } else if (ignored instanceof Function) {\n    return ignored;\n  } else if (ignored) {\n    throw new Error(`Invalid option for 'ignored': ${ignored}`);\n  } else {\n    return () => false;\n  }\n};\n\nconst normalizeOptions = options => {\n  return {\n    followSymlinks: !!options.followSymlinks,\n    ignored: ignoredToFunction(options.ignored),\n    poll: options.poll\n  };\n};\n\nconst normalizeCache = new WeakMap();\n\nconst cachedNormalizeOptions = options => {\n  const cacheEntry = normalizeCache.get(options);\n  if (cacheEntry !== undefined) return cacheEntry;\n  const normalized = normalizeOptions(options);\n  normalizeCache.set(options, normalized);\n  return normalized;\n};\n\nclass WatchpackFileWatcher {\n  constructor(watchpack, watcher, files) {\n    this.files = Array.isArray(files) ? files : [files];\n    this.watcher = watcher;\n    watcher.on(\"initial-missing\", type => {\n      for (const file of this.files) {\n        if (!watchpack._missing.has(file)) watchpack._onRemove(file, file, type);\n      }\n    });\n    watcher.on(\"change\", (mtime, type) => {\n      for (const file of this.files) {\n        watchpack._onChange(file, mtime, file, type);\n      }\n    });\n    watcher.on(\"remove\", type => {\n      for (const file of this.files) {\n        watchpack._onRemove(file, file, type);\n      }\n    });\n  }\n\n  update(files) {\n    if (!Array.isArray(files)) {\n      if (this.files.length !== 1) {\n        this.files = [files];\n      } else if (this.files[0] !== files) {\n        this.files[0] = files;\n      }\n    } else {\n      this.files = files;\n    }\n  }\n\n  close() {\n    this.watcher.close();\n  }\n\n}\n\nclass WatchpackDirectoryWatcher {\n  constructor(watchpack, watcher, directories) {\n    this.directories = Array.isArray(directories) ? directories : [directories];\n    this.watcher = watcher;\n    watcher.on(\"initial-missing\", type => {\n      for (const item of this.directories) {\n        watchpack._onRemove(item, item, type);\n      }\n    });\n    watcher.on(\"change\", (file, mtime, type) => {\n      for (const item of this.directories) {\n        watchpack._onChange(item, mtime, file, type);\n      }\n    });\n    watcher.on(\"remove\", type => {\n      for (const item of this.directories) {\n        watchpack._onRemove(item, item, type);\n      }\n    });\n  }\n\n  update(directories) {\n    if (!Array.isArray(directories)) {\n      if (this.directories.length !== 1) {\n        this.directories = [directories];\n      } else if (this.directories[0] !== directories) {\n        this.directories[0] = directories;\n      }\n    } else {\n      this.directories = directories;\n    }\n  }\n\n  close() {\n    this.watcher.close();\n  }\n\n}\n\nclass Watchpack extends EventEmitter {\n  constructor(options) {\n    super();\n    if (!options) options = EMPTY_OPTIONS;\n    this.options = options;\n    this.aggregateTimeout = typeof options.aggregateTimeout === \"number\" ? options.aggregateTimeout : 200;\n    this.watcherOptions = cachedNormalizeOptions(options);\n    this.watcherManager = getWatcherManager(this.watcherOptions);\n    this.fileWatchers = new Map();\n    this.directoryWatchers = new Map();\n    this._missing = new Set();\n    this.startTime = undefined;\n    this.paused = false;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.aggregateTimer = undefined;\n    this._onTimeout = this._onTimeout.bind(this);\n  }\n\n  watch(arg1, arg2, arg3) {\n    let files, directories, missing, startTime;\n\n    if (!arg2) {\n      ({\n        files = EMPTY_ARRAY,\n        directories = EMPTY_ARRAY,\n        missing = EMPTY_ARRAY,\n        startTime\n      } = arg1);\n    } else {\n      files = arg1;\n      directories = arg2;\n      missing = EMPTY_ARRAY;\n      startTime = arg3;\n    }\n\n    this.paused = false;\n    const fileWatchers = this.fileWatchers;\n    const directoryWatchers = this.directoryWatchers;\n    const ignored = this.watcherOptions.ignored;\n\n    const filter = path => !ignored(path);\n\n    const addToMap = (map, key, item) => {\n      const list = map.get(key);\n\n      if (list === undefined) {\n        map.set(key, item);\n      } else if (Array.isArray(list)) {\n        list.push(item);\n      } else {\n        map.set(key, [list, item]);\n      }\n    };\n\n    const fileWatchersNeeded = new Map();\n    const directoryWatchersNeeded = new Map();\n    const missingFiles = new Set();\n\n    if (this.watcherOptions.followSymlinks) {\n      const resolver = new LinkResolver();\n\n      for (const file of files) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              addToMap(fileWatchersNeeded, innerFile, file);\n            }\n          }\n        }\n      }\n\n      for (const file of missing) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              missingFiles.add(file);\n              addToMap(fileWatchersNeeded, innerFile, file);\n            }\n          }\n        }\n      }\n\n      for (const dir of directories) {\n        if (filter(dir)) {\n          let first = true;\n\n          for (const innerItem of resolver.resolve(dir)) {\n            if (filter(innerItem)) {\n              addToMap(first ? directoryWatchersNeeded : fileWatchersNeeded, innerItem, dir);\n            }\n\n            first = false;\n          }\n        }\n      }\n    } else {\n      for (const file of files) {\n        if (filter(file)) {\n          addToMap(fileWatchersNeeded, file, file);\n        }\n      }\n\n      for (const file of missing) {\n        if (filter(file)) {\n          missingFiles.add(file);\n          addToMap(fileWatchersNeeded, file, file);\n        }\n      }\n\n      for (const dir of directories) {\n        if (filter(dir)) {\n          addToMap(directoryWatchersNeeded, dir, dir);\n        }\n      }\n    } // Close unneeded old watchers\n    // and update existing watchers\n\n\n    for (const [key, w] of fileWatchers) {\n      const needed = fileWatchersNeeded.get(key);\n\n      if (needed === undefined) {\n        w.close();\n        fileWatchers.delete(key);\n      } else {\n        w.update(needed);\n        fileWatchersNeeded.delete(key);\n      }\n    }\n\n    for (const [key, w] of directoryWatchers) {\n      const needed = directoryWatchersNeeded.get(key);\n\n      if (needed === undefined) {\n        w.close();\n        directoryWatchers.delete(key);\n      } else {\n        w.update(needed);\n        directoryWatchersNeeded.delete(key);\n      }\n    } // Create new watchers and install handlers on these watchers\n\n\n    watchEventSource.batch(() => {\n      for (const [key, files] of fileWatchersNeeded) {\n        const watcher = this.watcherManager.watchFile(key, startTime);\n\n        if (watcher) {\n          fileWatchers.set(key, new WatchpackFileWatcher(this, watcher, files));\n        }\n      }\n\n      for (const [key, directories] of directoryWatchersNeeded) {\n        const watcher = this.watcherManager.watchDirectory(key, startTime);\n\n        if (watcher) {\n          directoryWatchers.set(key, new WatchpackDirectoryWatcher(this, watcher, directories));\n        }\n      }\n    });\n    this._missing = missingFiles;\n    this.startTime = startTime;\n  }\n\n  close() {\n    this.paused = true;\n    if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n\n    for (const w of this.fileWatchers.values()) w.close();\n\n    for (const w of this.directoryWatchers.values()) w.close();\n\n    this.fileWatchers.clear();\n    this.directoryWatchers.clear();\n  }\n\n  pause() {\n    this.paused = true;\n    if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n  }\n\n  getTimes() {\n    const directoryWatchers = new Set();\n    addWatchersToSet(this.fileWatchers.values(), directoryWatchers);\n    addWatchersToSet(this.directoryWatchers.values(), directoryWatchers);\n    const obj = Object.create(null);\n\n    for (const w of directoryWatchers) {\n      const times = w.getTimes();\n\n      for (const file of Object.keys(times)) obj[file] = times[file];\n    }\n\n    return obj;\n  }\n\n  getTimeInfoEntries() {\n    const map = new Map();\n    this.collectTimeInfoEntries(map, map);\n    return map;\n  }\n\n  collectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n    const allWatchers = new Set();\n    addWatchersToSet(this.fileWatchers.values(), allWatchers);\n    addWatchersToSet(this.directoryWatchers.values(), allWatchers);\n    const safeTime = {\n      value: 0\n    };\n\n    for (const w of allWatchers) {\n      w.collectTimeInfoEntries(fileTimestamps, directoryTimestamps, safeTime);\n    }\n  }\n\n  getAggregated() {\n    if (this.aggregateTimer) {\n      clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = undefined;\n    }\n\n    const changes = this.aggregatedChanges;\n    const removals = this.aggregatedRemovals;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    return {\n      changes,\n      removals\n    };\n  }\n\n  _onChange(item, mtime, file, type) {\n    file = file || item;\n\n    if (!this.paused) {\n      this.emit(\"change\", file, mtime, type);\n      if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n    }\n\n    this.aggregatedRemovals.delete(item);\n    this.aggregatedChanges.add(item);\n  }\n\n  _onRemove(item, file, type) {\n    file = file || item;\n\n    if (!this.paused) {\n      this.emit(\"remove\", file, type);\n      if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n    }\n\n    this.aggregatedChanges.delete(item);\n    this.aggregatedRemovals.add(item);\n  }\n\n  _onTimeout() {\n    this.aggregateTimer = undefined;\n    const changes = this.aggregatedChanges;\n    const removals = this.aggregatedRemovals;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.emit(\"aggregated\", changes, removals);\n  }\n\n}\n\nmodule.exports = Watchpack;","map":{"version":3,"names":["getWatcherManager","require","LinkResolver","EventEmitter","globToRegExp","watchEventSource","EMPTY_ARRAY","EMPTY_OPTIONS","addWatchersToSet","watchers","set","ww","w","watcher","has","directoryWatcher","add","stringToRegexp","ignored","source","globstar","extended","matchingStart","slice","length","ignoredToFunction","Array","isArray","regexp","RegExp","map","i","join","x","test","replace","Function","Error","normalizeOptions","options","followSymlinks","poll","normalizeCache","WeakMap","cachedNormalizeOptions","cacheEntry","get","undefined","normalized","WatchpackFileWatcher","constructor","watchpack","files","on","type","file","_missing","_onRemove","mtime","_onChange","update","close","WatchpackDirectoryWatcher","directories","item","Watchpack","aggregateTimeout","watcherOptions","watcherManager","fileWatchers","Map","directoryWatchers","Set","startTime","paused","aggregatedChanges","aggregatedRemovals","aggregateTimer","_onTimeout","bind","watch","arg1","arg2","arg3","missing","filter","path","addToMap","key","list","push","fileWatchersNeeded","directoryWatchersNeeded","missingFiles","resolver","innerFile","resolve","dir","first","innerItem","needed","delete","batch","watchFile","watchDirectory","clearTimeout","values","clear","pause","getTimes","obj","Object","create","times","keys","getTimeInfoEntries","collectTimeInfoEntries","fileTimestamps","directoryTimestamps","allWatchers","safeTime","value","getAggregated","changes","removals","emit","setTimeout","module","exports"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/watchpack/lib/watchpack.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst getWatcherManager = require(\"./getWatcherManager\");\r\nconst LinkResolver = require(\"./LinkResolver\");\r\nconst EventEmitter = require(\"events\").EventEmitter;\r\nconst globToRegExp = require(\"glob-to-regexp\");\r\nconst watchEventSource = require(\"./watchEventSource\");\r\n\r\nconst EMPTY_ARRAY = [];\r\nconst EMPTY_OPTIONS = {};\r\n\r\nfunction addWatchersToSet(watchers, set) {\r\n\tfor (const ww of watchers) {\r\n\t\tconst w = ww.watcher;\r\n\t\tif (!set.has(w.directoryWatcher)) {\r\n\t\t\tset.add(w.directoryWatcher);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst stringToRegexp = ignored => {\r\n\tconst source = globToRegExp(ignored, { globstar: true, extended: true })\r\n\t\t.source;\r\n\tconst matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\r\n\treturn matchingStart;\r\n};\r\n\r\nconst ignoredToFunction = ignored => {\r\n\tif (Array.isArray(ignored)) {\r\n\t\tconst regexp = new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\r\n\t\treturn x => regexp.test(x.replace(/\\\\/g, \"/\"));\r\n\t} else if (typeof ignored === \"string\") {\r\n\t\tconst regexp = new RegExp(stringToRegexp(ignored));\r\n\t\treturn x => regexp.test(x.replace(/\\\\/g, \"/\"));\r\n\t} else if (ignored instanceof RegExp) {\r\n\t\treturn x => ignored.test(x.replace(/\\\\/g, \"/\"));\r\n\t} else if (ignored instanceof Function) {\r\n\t\treturn ignored;\r\n\t} else if (ignored) {\r\n\t\tthrow new Error(`Invalid option for 'ignored': ${ignored}`);\r\n\t} else {\r\n\t\treturn () => false;\r\n\t}\r\n};\r\n\r\nconst normalizeOptions = options => {\r\n\treturn {\r\n\t\tfollowSymlinks: !!options.followSymlinks,\r\n\t\tignored: ignoredToFunction(options.ignored),\r\n\t\tpoll: options.poll\r\n\t};\r\n};\r\n\r\nconst normalizeCache = new WeakMap();\r\nconst cachedNormalizeOptions = options => {\r\n\tconst cacheEntry = normalizeCache.get(options);\r\n\tif (cacheEntry !== undefined) return cacheEntry;\r\n\tconst normalized = normalizeOptions(options);\r\n\tnormalizeCache.set(options, normalized);\r\n\treturn normalized;\r\n};\r\n\r\nclass WatchpackFileWatcher {\r\n\tconstructor(watchpack, watcher, files) {\r\n\t\tthis.files = Array.isArray(files) ? files : [files];\r\n\t\tthis.watcher = watcher;\r\n\t\twatcher.on(\"initial-missing\", type => {\r\n\t\t\tfor (const file of this.files) {\r\n\t\t\t\tif (!watchpack._missing.has(file))\r\n\t\t\t\t\twatchpack._onRemove(file, file, type);\r\n\t\t\t}\r\n\t\t});\r\n\t\twatcher.on(\"change\", (mtime, type) => {\r\n\t\t\tfor (const file of this.files) {\r\n\t\t\t\twatchpack._onChange(file, mtime, file, type);\r\n\t\t\t}\r\n\t\t});\r\n\t\twatcher.on(\"remove\", type => {\r\n\t\t\tfor (const file of this.files) {\r\n\t\t\t\twatchpack._onRemove(file, file, type);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(files) {\r\n\t\tif (!Array.isArray(files)) {\r\n\t\t\tif (this.files.length !== 1) {\r\n\t\t\t\tthis.files = [files];\r\n\t\t\t} else if (this.files[0] !== files) {\r\n\t\t\t\tthis.files[0] = files;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.files = files;\r\n\t\t}\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.watcher.close();\r\n\t}\r\n}\r\n\r\nclass WatchpackDirectoryWatcher {\r\n\tconstructor(watchpack, watcher, directories) {\r\n\t\tthis.directories = Array.isArray(directories) ? directories : [directories];\r\n\t\tthis.watcher = watcher;\r\n\t\twatcher.on(\"initial-missing\", type => {\r\n\t\t\tfor (const item of this.directories) {\r\n\t\t\t\twatchpack._onRemove(item, item, type);\r\n\t\t\t}\r\n\t\t});\r\n\t\twatcher.on(\"change\", (file, mtime, type) => {\r\n\t\t\tfor (const item of this.directories) {\r\n\t\t\t\twatchpack._onChange(item, mtime, file, type);\r\n\t\t\t}\r\n\t\t});\r\n\t\twatcher.on(\"remove\", type => {\r\n\t\t\tfor (const item of this.directories) {\r\n\t\t\t\twatchpack._onRemove(item, item, type);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(directories) {\r\n\t\tif (!Array.isArray(directories)) {\r\n\t\t\tif (this.directories.length !== 1) {\r\n\t\t\t\tthis.directories = [directories];\r\n\t\t\t} else if (this.directories[0] !== directories) {\r\n\t\t\t\tthis.directories[0] = directories;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.directories = directories;\r\n\t\t}\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.watcher.close();\r\n\t}\r\n}\r\n\r\nclass Watchpack extends EventEmitter {\r\n\tconstructor(options) {\r\n\t\tsuper();\r\n\t\tif (!options) options = EMPTY_OPTIONS;\r\n\t\tthis.options = options;\r\n\t\tthis.aggregateTimeout =\r\n\t\t\ttypeof options.aggregateTimeout === \"number\"\r\n\t\t\t\t? options.aggregateTimeout\r\n\t\t\t\t: 200;\r\n\t\tthis.watcherOptions = cachedNormalizeOptions(options);\r\n\t\tthis.watcherManager = getWatcherManager(this.watcherOptions);\r\n\t\tthis.fileWatchers = new Map();\r\n\t\tthis.directoryWatchers = new Map();\r\n\t\tthis._missing = new Set();\r\n\t\tthis.startTime = undefined;\r\n\t\tthis.paused = false;\r\n\t\tthis.aggregatedChanges = new Set();\r\n\t\tthis.aggregatedRemovals = new Set();\r\n\t\tthis.aggregateTimer = undefined;\r\n\t\tthis._onTimeout = this._onTimeout.bind(this);\r\n\t}\r\n\r\n\twatch(arg1, arg2, arg3) {\r\n\t\tlet files, directories, missing, startTime;\r\n\t\tif (!arg2) {\r\n\t\t\t({\r\n\t\t\t\tfiles = EMPTY_ARRAY,\r\n\t\t\t\tdirectories = EMPTY_ARRAY,\r\n\t\t\t\tmissing = EMPTY_ARRAY,\r\n\t\t\t\tstartTime\r\n\t\t\t} = arg1);\r\n\t\t} else {\r\n\t\t\tfiles = arg1;\r\n\t\t\tdirectories = arg2;\r\n\t\t\tmissing = EMPTY_ARRAY;\r\n\t\t\tstartTime = arg3;\r\n\t\t}\r\n\t\tthis.paused = false;\r\n\t\tconst fileWatchers = this.fileWatchers;\r\n\t\tconst directoryWatchers = this.directoryWatchers;\r\n\t\tconst ignored = this.watcherOptions.ignored;\r\n\t\tconst filter = path => !ignored(path);\r\n\t\tconst addToMap = (map, key, item) => {\r\n\t\t\tconst list = map.get(key);\r\n\t\t\tif (list === undefined) {\r\n\t\t\t\tmap.set(key, item);\r\n\t\t\t} else if (Array.isArray(list)) {\r\n\t\t\t\tlist.push(item);\r\n\t\t\t} else {\r\n\t\t\t\tmap.set(key, [list, item]);\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst fileWatchersNeeded = new Map();\r\n\t\tconst directoryWatchersNeeded = new Map();\r\n\t\tconst missingFiles = new Set();\r\n\t\tif (this.watcherOptions.followSymlinks) {\r\n\t\t\tconst resolver = new LinkResolver();\r\n\t\t\tfor (const file of files) {\r\n\t\t\t\tif (filter(file)) {\r\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\r\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\r\n\t\t\t\t\t\t\taddToMap(fileWatchersNeeded, innerFile, file);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const file of missing) {\r\n\t\t\t\tif (filter(file)) {\r\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\r\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\r\n\t\t\t\t\t\t\tmissingFiles.add(file);\r\n\t\t\t\t\t\t\taddToMap(fileWatchersNeeded, innerFile, file);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const dir of directories) {\r\n\t\t\t\tif (filter(dir)) {\r\n\t\t\t\t\tlet first = true;\r\n\t\t\t\t\tfor (const innerItem of resolver.resolve(dir)) {\r\n\t\t\t\t\t\tif (filter(innerItem)) {\r\n\t\t\t\t\t\t\taddToMap(\r\n\t\t\t\t\t\t\t\tfirst ? directoryWatchersNeeded : fileWatchersNeeded,\r\n\t\t\t\t\t\t\t\tinnerItem,\r\n\t\t\t\t\t\t\t\tdir\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfirst = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (const file of files) {\r\n\t\t\t\tif (filter(file)) {\r\n\t\t\t\t\taddToMap(fileWatchersNeeded, file, file);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const file of missing) {\r\n\t\t\t\tif (filter(file)) {\r\n\t\t\t\t\tmissingFiles.add(file);\r\n\t\t\t\t\taddToMap(fileWatchersNeeded, file, file);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const dir of directories) {\r\n\t\t\t\tif (filter(dir)) {\r\n\t\t\t\t\taddToMap(directoryWatchersNeeded, dir, dir);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Close unneeded old watchers\r\n\t\t// and update existing watchers\r\n\t\tfor (const [key, w] of fileWatchers) {\r\n\t\t\tconst needed = fileWatchersNeeded.get(key);\r\n\t\t\tif (needed === undefined) {\r\n\t\t\t\tw.close();\r\n\t\t\t\tfileWatchers.delete(key);\r\n\t\t\t} else {\r\n\t\t\t\tw.update(needed);\r\n\t\t\t\tfileWatchersNeeded.delete(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const [key, w] of directoryWatchers) {\r\n\t\t\tconst needed = directoryWatchersNeeded.get(key);\r\n\t\t\tif (needed === undefined) {\r\n\t\t\t\tw.close();\r\n\t\t\t\tdirectoryWatchers.delete(key);\r\n\t\t\t} else {\r\n\t\t\t\tw.update(needed);\r\n\t\t\t\tdirectoryWatchersNeeded.delete(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Create new watchers and install handlers on these watchers\r\n\t\twatchEventSource.batch(() => {\r\n\t\t\tfor (const [key, files] of fileWatchersNeeded) {\r\n\t\t\t\tconst watcher = this.watcherManager.watchFile(key, startTime);\r\n\t\t\t\tif (watcher) {\r\n\t\t\t\t\tfileWatchers.set(key, new WatchpackFileWatcher(this, watcher, files));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const [key, directories] of directoryWatchersNeeded) {\r\n\t\t\t\tconst watcher = this.watcherManager.watchDirectory(key, startTime);\r\n\t\t\t\tif (watcher) {\r\n\t\t\t\t\tdirectoryWatchers.set(\r\n\t\t\t\t\t\tkey,\r\n\t\t\t\t\t\tnew WatchpackDirectoryWatcher(this, watcher, directories)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._missing = missingFiles;\r\n\t\tthis.startTime = startTime;\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.paused = true;\r\n\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\r\n\t\tfor (const w of this.fileWatchers.values()) w.close();\r\n\t\tfor (const w of this.directoryWatchers.values()) w.close();\r\n\t\tthis.fileWatchers.clear();\r\n\t\tthis.directoryWatchers.clear();\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\r\n\t}\r\n\r\n\tgetTimes() {\r\n\t\tconst directoryWatchers = new Set();\r\n\t\taddWatchersToSet(this.fileWatchers.values(), directoryWatchers);\r\n\t\taddWatchersToSet(this.directoryWatchers.values(), directoryWatchers);\r\n\t\tconst obj = Object.create(null);\r\n\t\tfor (const w of directoryWatchers) {\r\n\t\t\tconst times = w.getTimes();\r\n\t\t\tfor (const file of Object.keys(times)) obj[file] = times[file];\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tgetTimeInfoEntries() {\r\n\t\tconst map = new Map();\r\n\t\tthis.collectTimeInfoEntries(map, map);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tcollectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\r\n\t\tconst allWatchers = new Set();\r\n\t\taddWatchersToSet(this.fileWatchers.values(), allWatchers);\r\n\t\taddWatchersToSet(this.directoryWatchers.values(), allWatchers);\r\n\t\tconst safeTime = { value: 0 };\r\n\t\tfor (const w of allWatchers) {\r\n\t\t\tw.collectTimeInfoEntries(fileTimestamps, directoryTimestamps, safeTime);\r\n\t\t}\r\n\t}\r\n\r\n\tgetAggregated() {\r\n\t\tif (this.aggregateTimer) {\r\n\t\t\tclearTimeout(this.aggregateTimer);\r\n\t\t\tthis.aggregateTimer = undefined;\r\n\t\t}\r\n\t\tconst changes = this.aggregatedChanges;\r\n\t\tconst removals = this.aggregatedRemovals;\r\n\t\tthis.aggregatedChanges = new Set();\r\n\t\tthis.aggregatedRemovals = new Set();\r\n\t\treturn { changes, removals };\r\n\t}\r\n\r\n\t_onChange(item, mtime, file, type) {\r\n\t\tfile = file || item;\r\n\t\tif (!this.paused) {\r\n\t\t\tthis.emit(\"change\", file, mtime, type);\r\n\t\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\r\n\t\t\tthis.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\r\n\t\t}\r\n\t\tthis.aggregatedRemovals.delete(item);\r\n\t\tthis.aggregatedChanges.add(item);\r\n\t}\r\n\r\n\t_onRemove(item, file, type) {\r\n\t\tfile = file || item;\r\n\t\tif (!this.paused) {\r\n\t\t\tthis.emit(\"remove\", file, type);\r\n\t\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\r\n\t\t\tthis.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\r\n\t\t}\r\n\t\tthis.aggregatedChanges.delete(item);\r\n\t\tthis.aggregatedRemovals.add(item);\r\n\t}\r\n\r\n\t_onTimeout() {\r\n\t\tthis.aggregateTimer = undefined;\r\n\t\tconst changes = this.aggregatedChanges;\r\n\t\tconst removals = this.aggregatedRemovals;\r\n\t\tthis.aggregatedChanges = new Set();\r\n\t\tthis.aggregatedRemovals = new Set();\r\n\t\tthis.emit(\"aggregated\", changes, removals);\r\n\t}\r\n}\r\n\r\nmodule.exports = Watchpack;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}