{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class FileExistsPlugin {\n  /**\r\n   * @param {string | ResolveStepHook} source source\r\n   * @param {string | ResolveStepHook} target target\r\n   */\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n  /**\r\n   * @param {Resolver} resolver the resolver\r\n   * @returns {void}\r\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    const fs = resolver.fileSystem;\n    resolver.getHook(this.source).tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n      const file = request.path;\n      if (!file) return callback();\n      fs.stat(file, (err, stat) => {\n        if (err || !stat) {\n          if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n          return callback();\n        }\n\n        if (!stat.isFile()) {\n          if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" is not a file\");\n          return callback();\n        }\n\n        if (resolveContext.fileDependencies) resolveContext.fileDependencies.add(file);\n        resolver.doResolve(target, request, \"existing file: \" + file, resolveContext, callback);\n      });\n    });\n  }\n\n};","map":{"version":3,"names":["module","exports","FileExistsPlugin","constructor","source","target","apply","resolver","ensureHook","fs","fileSystem","getHook","tapAsync","request","resolveContext","callback","file","path","stat","err","missingDependencies","add","log","isFile","fileDependencies","doResolve"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/enhanced-resolve/lib/FileExistsPlugin.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\n\"use strict\";\r\n\r\n/** @typedef {import(\"./Resolver\")} Resolver */\r\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\r\n\r\nmodule.exports = class FileExistsPlugin {\r\n\t/**\r\n\t * @param {string | ResolveStepHook} source source\r\n\t * @param {string | ResolveStepHook} target target\r\n\t */\r\n\tconstructor(source, target) {\r\n\t\tthis.source = source;\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Resolver} resolver the resolver\r\n\t * @returns {void}\r\n\t */\r\n\tapply(resolver) {\r\n\t\tconst target = resolver.ensureHook(this.target);\r\n\t\tconst fs = resolver.fileSystem;\r\n\t\tresolver\r\n\t\t\t.getHook(this.source)\r\n\t\t\t.tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\r\n\t\t\t\tconst file = request.path;\r\n\t\t\t\tif (!file) return callback();\r\n\t\t\t\tfs.stat(file, (err, stat) => {\r\n\t\t\t\t\tif (err || !stat) {\r\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\r\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\r\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\r\n\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!stat.isFile()) {\r\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\r\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\r\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" is not a file\");\r\n\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (resolveContext.fileDependencies)\r\n\t\t\t\t\t\tresolveContext.fileDependencies.add(file);\r\n\t\t\t\t\tresolver.doResolve(\r\n\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\trequest,\r\n\t\t\t\t\t\t\"existing file: \" + file,\r\n\t\t\t\t\t\tresolveContext,\r\n\t\t\t\t\t\tcallback\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,gBAAN,CAAuB;EACvC;AACD;AACA;AACA;EACCC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACA,MAAMI,EAAE,GAAGF,QAAQ,CAACG,UAApB;IACAH,QAAQ,CACNI,OADF,CACU,KAAKP,MADf,EAEEQ,QAFF,CAEW,kBAFX,EAE+B,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACpE,MAAMC,IAAI,GAAGH,OAAO,CAACI,IAArB;MACA,IAAI,CAACD,IAAL,EAAW,OAAOD,QAAQ,EAAf;MACXN,EAAE,CAACS,IAAH,CAAQF,IAAR,EAAc,CAACG,GAAD,EAAMD,IAAN,KAAe;QAC5B,IAAIC,GAAG,IAAI,CAACD,IAAZ,EAAkB;UACjB,IAAIJ,cAAc,CAACM,mBAAnB,EACCN,cAAc,CAACM,mBAAf,CAAmCC,GAAnC,CAAuCL,IAAvC;UACD,IAAIF,cAAc,CAACQ,GAAnB,EAAwBR,cAAc,CAACQ,GAAf,CAAmBN,IAAI,GAAG,gBAA1B;UACxB,OAAOD,QAAQ,EAAf;QACA;;QACD,IAAI,CAACG,IAAI,CAACK,MAAL,EAAL,EAAoB;UACnB,IAAIT,cAAc,CAACM,mBAAnB,EACCN,cAAc,CAACM,mBAAf,CAAmCC,GAAnC,CAAuCL,IAAvC;UACD,IAAIF,cAAc,CAACQ,GAAnB,EAAwBR,cAAc,CAACQ,GAAf,CAAmBN,IAAI,GAAG,gBAA1B;UACxB,OAAOD,QAAQ,EAAf;QACA;;QACD,IAAID,cAAc,CAACU,gBAAnB,EACCV,cAAc,CAACU,gBAAf,CAAgCH,GAAhC,CAAoCL,IAApC;QACDT,QAAQ,CAACkB,SAAT,CACCpB,MADD,EAECQ,OAFD,EAGC,oBAAoBG,IAHrB,EAICF,cAJD,EAKCC,QALD;MAOA,CAtBD;IAuBA,CA5BF;EA6BA;;AA9CsC,CAAxC"},"metadata":{},"sourceType":"script"}