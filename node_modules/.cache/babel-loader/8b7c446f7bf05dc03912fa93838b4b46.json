{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\nvar util = require('./util');\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\n\n\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\n\n\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true; // Serves as infimum\n\n  this._last = {\n    generatedLine: -1,\n    generatedColumn: 0\n  };\n}\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\n\n\nMappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n  this._array.forEach(aCallback, aThisArg);\n};\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\n\n\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n\n    this._array.push(aMapping);\n  }\n};\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\n\n\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n\n    this._sorted = true;\n  }\n\n  return this._array;\n};\n\nexports.MappingList = MappingList;","map":{"version":3,"names":["util","require","generatedPositionAfter","mappingA","mappingB","lineA","generatedLine","lineB","columnA","generatedColumn","columnB","compareByGeneratedPositionsInflated","MappingList","_array","_sorted","_last","prototype","unsortedForEach","MappingList_forEach","aCallback","aThisArg","forEach","add","MappingList_add","aMapping","push","toArray","MappingList_toArray","sort","exports"],"sources":["W:/Coding/finalProject/e-commerce-website/node_modules/source-map/lib/mapping-list.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2014 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\nvar util = require('./util');\r\n\r\n/**\r\n * Determine whether mappingB is after mappingA with respect to generated\r\n * position.\r\n */\r\nfunction generatedPositionAfter(mappingA, mappingB) {\r\n  // Optimized for most common case\r\n  var lineA = mappingA.generatedLine;\r\n  var lineB = mappingB.generatedLine;\r\n  var columnA = mappingA.generatedColumn;\r\n  var columnB = mappingB.generatedColumn;\r\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\r\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\r\n}\r\n\r\n/**\r\n * A data structure to provide a sorted view of accumulated mappings in a\r\n * performance conscious manner. It trades a neglibable overhead in general\r\n * case for a large speedup in case of mappings being added in order.\r\n */\r\nfunction MappingList() {\r\n  this._array = [];\r\n  this._sorted = true;\r\n  // Serves as infimum\r\n  this._last = {generatedLine: -1, generatedColumn: 0};\r\n}\r\n\r\n/**\r\n * Iterate through internal items. This method takes the same arguments that\r\n * `Array.prototype.forEach` takes.\r\n *\r\n * NOTE: The order of the mappings is NOT guaranteed.\r\n */\r\nMappingList.prototype.unsortedForEach =\r\n  function MappingList_forEach(aCallback, aThisArg) {\r\n    this._array.forEach(aCallback, aThisArg);\r\n  };\r\n\r\n/**\r\n * Add the given source mapping.\r\n *\r\n * @param Object aMapping\r\n */\r\nMappingList.prototype.add = function MappingList_add(aMapping) {\r\n  if (generatedPositionAfter(this._last, aMapping)) {\r\n    this._last = aMapping;\r\n    this._array.push(aMapping);\r\n  } else {\r\n    this._sorted = false;\r\n    this._array.push(aMapping);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the flat, sorted array of mappings. The mappings are sorted by\r\n * generated position.\r\n *\r\n * WARNING: This method returns internal data without copying, for\r\n * performance. The return value must NOT be mutated, and should be treated as\r\n * an immutable borrow. If you want to take ownership, you must make your own\r\n * copy.\r\n */\r\nMappingList.prototype.toArray = function MappingList_toArray() {\r\n  if (!this._sorted) {\r\n    this._array.sort(util.compareByGeneratedPositionsInflated);\r\n    this._sorted = true;\r\n  }\r\n  return this._array;\r\n};\r\n\r\nexports.MappingList = MappingList;\r\n"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;EAClD;EACA,IAAIC,KAAK,GAAGF,QAAQ,CAACG,aAArB;EACA,IAAIC,KAAK,GAAGH,QAAQ,CAACE,aAArB;EACA,IAAIE,OAAO,GAAGL,QAAQ,CAACM,eAAvB;EACA,IAAIC,OAAO,GAAGN,QAAQ,CAACK,eAAvB;EACA,OAAOF,KAAK,GAAGF,KAAR,IAAiBE,KAAK,IAAIF,KAAT,IAAkBK,OAAO,IAAIF,OAA9C,IACAR,IAAI,CAACW,mCAAL,CAAyCR,QAAzC,EAAmDC,QAAnD,KAAgE,CADvE;AAED;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASQ,WAAT,GAAuB;EACrB,KAAKC,MAAL,GAAc,EAAd;EACA,KAAKC,OAAL,GAAe,IAAf,CAFqB,CAGrB;;EACA,KAAKC,KAAL,GAAa;IAACT,aAAa,EAAE,CAAC,CAAjB;IAAoBG,eAAe,EAAE;EAArC,CAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAG,WAAW,CAACI,SAAZ,CAAsBC,eAAtB,GACE,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,QAAxC,EAAkD;EAChD,KAAKP,MAAL,CAAYQ,OAAZ,CAAoBF,SAApB,EAA+BC,QAA/B;AACD,CAHH;AAKA;AACA;AACA;AACA;AACA;;;AACAR,WAAW,CAACI,SAAZ,CAAsBM,GAAtB,GAA4B,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;EAC7D,IAAItB,sBAAsB,CAAC,KAAKa,KAAN,EAAaS,QAAb,CAA1B,EAAkD;IAChD,KAAKT,KAAL,GAAaS,QAAb;;IACA,KAAKX,MAAL,CAAYY,IAAZ,CAAiBD,QAAjB;EACD,CAHD,MAGO;IACL,KAAKV,OAAL,GAAe,KAAf;;IACA,KAAKD,MAAL,CAAYY,IAAZ,CAAiBD,QAAjB;EACD;AACF,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,WAAW,CAACI,SAAZ,CAAsBU,OAAtB,GAAgC,SAASC,mBAAT,GAA+B;EAC7D,IAAI,CAAC,KAAKb,OAAV,EAAmB;IACjB,KAAKD,MAAL,CAAYe,IAAZ,CAAiB5B,IAAI,CAACW,mCAAtB;;IACA,KAAKG,OAAL,GAAe,IAAf;EACD;;EACD,OAAO,KAAKD,MAAZ;AACD,CAND;;AAQAgB,OAAO,CAACjB,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}